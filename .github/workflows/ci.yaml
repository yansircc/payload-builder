name: CI

on:
  push:
    branches: [main, develop]
    # Only trigger on relevant file changes
    paths:
      - '**.js'
      - '**.jsx'
      - '**.ts'
      - '**.tsx'
      - 'package.json'
      - 'bun.lockb'
      - '.github/workflows/**'
  pull_request:
    branches: [main, develop]

# Prevent concurrent builds and cancel outdated ones
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.9.0]
      # Enable fast failure for faster feedback
      fail-fast: true

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd mongosh
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      # Cache dependencies
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      # Cache Next.js build
      - name: Cache Next.js build
        id: next-cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/*.{js,jsx,ts,tsx}') }}-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-

      # Add cache status log
      - name: Log cache status
        run: |
          if [ "${{ steps.next-cache.outputs.cache-hit }}" = "true" ]; then
            echo "âœ… Cache hit! Using cached Next.js build"
          else
            echo "ðŸ“¦ Cache miss. Will create new cache after build"
          fi

      - name: Install Dependencies
        run: bun install

      - name: Copy Environment Files
        run: |
          cp .env.example .env
          echo "DATABASE_URL=mongodb://localhost:27017/try_payload" >> .env
          echo "PAYLOAD_SECRET=test-secret-for-ci-environment" >> .env
          echo "NEXT_PUBLIC_SERVER_URL=http://localhost:3000" >> .env
          echo "CRON_SECRET=test-cron-secret-for-ci" >> .env

      - name: Generate Payload CMS Types
        run: bun generate:types

      - name: Format Check
        run: bun run format:check

      - name: Type Check
        run: bun run typecheck

      - name: Lint
        run: bun run lint

      - name: Test
        env:
          CI: true
          # Enable parallel test execution
          VITEST_MAX_WORKERS: 2
        run: bun test

      # Build with cache status awareness
      - name: Build Check
        id: build
        env:
          NODE_OPTIONS: --no-deprecation --max-old-space-size=4096
          NEXT_TELEMETRY_DISABLED: 1
        run: |
          if [ "${{ steps.next-cache.outputs.cache-hit }}" = "true" ]; then
            echo "Using cached build files"
          else
            echo "Creating fresh build"
          fi
          bun run build

      # Upload build artifact for main branch
      - name: Upload build artifact
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: .next
          retention-days: 7

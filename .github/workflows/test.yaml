name: üöÄ CI

on:
  push:
    branches: [main, develop]
    paths:
      - '**.js'
      - '**.jsx'
      - '**.ts'
      - '**.tsx'
      - 'package.json'
      - 'bun.lockb'
      - '.github/workflows/**'
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

# Prevent concurrent builds and cancel outdated ones
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build-and-test:
    name: üèóÔ∏è Build & üß™ Playwright Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.9.0]
      fail-fast: true

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      - name: üéØ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: üéØ Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: üì¶ Install Dependencies
        run: bun install --frozen-lockfile --no-progress

      - name: üìù Copy Environment Files
        run: |
          cp .env.example .env
          echo "DATABASE_URL=mongodb://localhost:27017/try_payload" >> .env
          echo "PAYLOAD_SECRET=test-secret-for-ci-environment" >> .env
          echo "NEXT_PUBLIC_SERVER_URL=http://localhost:3000" >> .env
          echo "CRON_SECRET=test-cron-secret-for-ci" >> .env

      - name: üèóÔ∏è Build Project
        env:
          NODE_ENV: "production"  # ‚úÖ Ensure production build
          NEXT_TELEMETRY_DISABLED: 1
          NODE_OPTIONS: --max-old-space-size=8192
          NEXT_TURBO: 1
          NEXT_LOG_LEVEL: error
        run: |
          bun run build --no-lint
          if [ ! -d ".next" ]; then
            echo "‚ùå Build failed! No .next/ directory found."
            exit 1
          fi

      - name: ‚è≥ Wait for MongoDB
        run: |
          for i in {1..10}; do
            if mongosh --eval "db.runCommand({ ping: 1 })" localhost:27017; then
              echo "‚úÖ MongoDB is ready!"
              exit 0
            fi
            echo "‚è≥ Waiting for MongoDB..."
            sleep 3
          done
          echo "‚ùå MongoDB did not start in time"
          exit 1

      - name: üöÄ Start Server
        env:
          NODE_ENV: "production"  # ‚úÖ Fix Next.js warning
          DATABASE_URL: "mongodb://localhost:27017/try_payload"
          PAYLOAD_SECRET: "test-secret-for-ci-environment"
          NEXT_PUBLIC_SERVER_URL: "http://localhost:3000"
          CRON_SECRET: "test-cron-secret-for-ci"
        run: |
          if [ ! -d ".next" ]; then
            echo "‚ùå No .next directory found! Make sure build step ran successfully."
            exit 1
          fi
          sudo lsof -ti:3000 | xargs --no-run-if-empty kill -9
          bun run start &

      - name: üîç Wait for Server to be Ready
        run: |
          for i in {1..10}; do
            if curl --output /dev/null --silent --head --fail http://localhost:3000; then
              echo "‚úÖ Server is up!"
              exit 0
            fi
            echo "‚è≥ Waiting for server..."
            sleep 3
          done
          echo "‚ùå Server did not start in time"
          exit 1

      - name: üì¶ Install Playwright Dependencies
        run: bun install --frozen-lockfile

      - name: Install Playwright Browsers
        run: bun playwright install --with-deps

      - name: üîç Run Playwright Tests
        run: bun playwright test --reporter=dot,line

      - name: üì∏ Upload Playwright Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

      - name: üöÄ Upload Playwright Traces
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-trace
          path: test-results/
          retention-days: 7

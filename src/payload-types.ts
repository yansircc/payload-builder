/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    categories: Category;
    users: User;
    tenants: Tenant;
    header: Header;
    footer: Footer;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    tenants: TenantsSelect<false> | TenantsSelect<true>;
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    'api-key': ApiKey;
  };
  globalsSelect: {
    'api-key': ApiKeySelect<false> | ApiKeySelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  tenant?: (string | null) | Tenant;
  title: string;
  hero?: HeroField;
  layout: (
    | CTABlock
    | ContentBlock
    | MediaBlock
    | ArchiveBlock
    | FormBlock
    | GalleryBlock
    | FeatureBlock
    | TestimonialBlock
    | ContactBlock
    | TeamBlock
    | FAQBlock
    | LogosBlock
  )[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants".
 */
export interface Tenant {
  id: string;
  name: string;
  /**
   * Used for domain-based tenant handling
   */
  domain?: string | null;
  /**
   * Used for url paths, example: /tenant-slug/page-slug
   */
  slug: string;
  /**
   * If checked, logging in is not required to read. Useful for building public pages.
   */
  allowPublicRead?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroField".
 */
export interface HeroField {
  style?:
    | (
        | 'hero-1'
        | 'hero-5'
        | 'hero-7'
        | 'hero-8'
        | 'hero-12'
        | 'hero-24'
        | 'hero-25'
        | 'hero-32'
        | 'hero-34'
        | 'hero-6'
        | 'hero-3'
        | 'hero-45'
        | 'hero-115'
      )
    | null;
  'hero-1'?: Hero1Fields;
  'hero-5'?: Hero5Fields;
  'hero-7'?: Hero7Fields;
  'hero-8'?: Hero8Fields;
  'hero-12'?: Hero12Fields;
  'hero-24'?: Hero24Fields;
  'hero-25'?: Hero25Fields;
  'hero-32'?: Hero32Fields;
  'hero-34'?: Hero34Fields;
  'hero-6'?: Hero6Fields;
  'hero-3'?: Hero3Fields;
  'hero-45'?: Hero45Fields;
  'hero-115'?: Hero115Fields;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero1Fields".
 */
export interface Hero1Fields {
  /**
   * Hero section fields
   */
  hero: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Subtitle text
     */
    subtitle?: string | null;
    /**
     * Hero image
     */
    image: string | Media;
    /**
     * Badge text displayed above title
     */
    badge?: string | null;
    /**
     * Hero buttons
     */
    links?:
      | {
          'link-1': {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          /**
           * Hero button with ArrowDownRight suffix icon
           */
          'link-2': {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  tenant?: (string | null) | Tenant;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  tenant?: (string | null) | Tenant;
  title: string;
  heroImage?: (string | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (string | Post)[] | null;
  categories?: (string | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (string | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  tenant?: (string | null) | Tenant;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (string | null) | Category;
  breadcrumbs?:
    | {
        doc?: (string | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  roles?: ('super-admin' | 'user')[] | null;
  username?: string | null;
  tenants?:
    | {
        tenant: string | Tenant;
        roles: ('tenant-admin' | 'tenant-viewer')[];
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero5Fields".
 */
export interface Hero5Fields {
  /**
   * Hero section fields
   */
  hero: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Subtitle text
     */
    subtitle?: string | null;
    /**
     * Hero image
     */
    image: string | Media;
    /**
     * Hero button
     */
    links?:
      | {
          /**
           * Hero button with ArrowRight prefix icon
           */
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero7Fields".
 */
export interface Hero7Fields {
  /**
   * Hero section fields
   */
  hero: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Subtitle text
     */
    subtitle?: string | null;
    /**
     * Hero button
     */
    link: {
      type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: string | Page;
          } | null)
        | ({
            relationTo: 'posts';
            value: string | Post;
          } | null);
      url?: string | null;
      label: string;
      /**
       * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
       */
      prefixIcon?: string | null;
      /**
       * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
       */
      suffixIcon?: string | null;
      /**
       * Choose how the link should be rendered.
       */
      appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
    };
    /**
     * Rating information
     */
    rating: {
      /**
       * Rating value (0-5)
       */
      rate: number;
      /**
       * Number of ratings
       */
      count: number;
      /**
       * User avatars (3-5)
       */
      avatars?:
        | {
            /**
             * User avatar
             */
            avatar: string | Media;
            id?: string | null;
          }[]
        | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero8Fields".
 */
export interface Hero8Fields {
  /**
   * Hero section fields
   */
  hero: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Subtitle text
     */
    subtitle?: string | null;
    /**
     * Hero image
     */
    image: string | Media;
    /**
     * Hero buttons (exactly 2)
     */
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero12Fields".
 */
export interface Hero12Fields {
  /**
   * Hero section fields
   */
  hero: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Subtitle text
     */
    subtitle?: string | null;
    /**
     * Partner logo image
     */
    logo: string | Media;
    /**
     * Badge text displayed above title
     */
    badge?: string | null;
    /**
     * Hero buttons (1-2)
     */
    links?:
      | {
          'link-1': {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          /**
           * Hero button with ExternalLink suffix icon
           */
          'link-2': {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
    /**
     * Partner logos (1-6)
     */
    partners?:
      | {
          /**
           * Partner logo image
           */
          logo: string | Media;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero24Fields".
 */
export interface Hero24Fields {
  /**
   * Hero section fields
   */
  hero: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Subtitle text
     */
    subtitle?: string | null;
    /**
     * Partner logo image
     */
    logo: string | Media;
    /**
     * Badge text displayed above title
     */
    badge?: string | null;
    /**
     * Hero button
     */
    links?:
      | {
          /**
           * Hero button with MoveRight suffix icon
           */
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
    /**
     * Feature list (exactly 4 items)
     */
    features?:
      | {
          /**
           * Lucide icon name
           */
          icon: string;
          /**
           * Feature title
           */
          title: string;
          /**
           * Feature description
           */
          description: string;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero25Fields".
 */
export interface Hero25Fields {
  /**
   * Hero section fields
   */
  hero: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Subtitle text
     */
    subtitle?: string | null;
    /**
     * Partner logo image
     */
    logo: string | Media;
    /**
     * Badge text displayed above title
     */
    badge?: string | null;
    /**
     * Hero buttons (1-2)
     */
    links?:
      | {
          /**
           * Hero button
           */
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
    /**
     * Feature list (1-4 items)
     */
    features?:
      | {
          /**
           * Lucide icon name
           */
          icon: string;
          /**
           * Feature title
           */
          title: string;
          /**
           * Feature description
           */
          description: string;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero32Fields".
 */
export interface Hero32Fields {
  /**
   * Hero section fields
   */
  hero: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Hero button
     */
    link: {
      type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: string | Page;
          } | null)
        | ({
            relationTo: 'posts';
            value: string | Post;
          } | null);
      url?: string | null;
      label: string;
      /**
       * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
       */
      prefixIcon?: string | null;
      /**
       * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
       */
      suffixIcon?: string | null;
      /**
       * Choose how the link should be rendered.
       */
      appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
    };
    /**
     * Integration images (exactly 15)
     */
    integrations?:
      | {
          /**
           * Integration logo/image
           */
          image: string | Media;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero34Fields".
 */
export interface Hero34Fields {
  /**
   * Hero section fields
   */
  hero: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Subtitle text
     */
    subtitle?: string | null;
    /**
     * Hero image
     */
    image: string | Media;
    /**
     * Badge text displayed above title
     */
    badge?: string | null;
    /**
     * Hero buttons
     */
    links?:
      | {
          /**
           * Hero button with ArrowRight prefix icon
           */
          'link-1': {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          'link-2': {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero6Fields".
 */
export interface Hero6Fields {
  /**
   * Hero section fields
   */
  hero: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Subtitle text
     */
    subtitle?: string | null;
    /**
     * Hero image
     */
    image: string | Media;
    /**
     * Hero buttons (exactly 3)
     */
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
    /**
     * Partner logos (exactly 4)
     */
    partners?:
      | {
          /**
           * Logo image
           */
          logo?: (string | null) | Media;
          id?: string | null;
        }[]
      | null;
    /**
     * Secondary image with button
     */
    secondaryImage: {
      /**
       * Hero image
       */
      image: string | Media;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero3Fields".
 */
export interface Hero3Fields {
  /**
   * Hero section fields
   */
  hero: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Subtitle text
     */
    subtitle?: string | null;
    /**
     * Avatar images (exactly 5)
     */
    avatars?:
      | {
          /**
           * Hero image
           */
          image: string | Media;
          id?: string | null;
        }[]
      | null;
    /**
     * Hero buttons (exactly 2)
     */
    links?:
      | {
          'link-1': {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          /**
           * Hero button with ArrowDownRight suffix icon
           */
          'link-2': {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
    /**
     * Review section configuration
     */
    review: {
      /**
       * Rating value (0-5)
       */
      rate: number;
      /**
       * Number of ratings
       */
      count: number;
    };
    /**
     * Hero media
     */
    media: {
      /**
       * Hero image
       */
      image: string | Media;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero45Fields".
 */
export interface Hero45Fields {
  /**
   * Hero section fields
   */
  hero: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Hero image
     */
    image: string | Media;
    /**
     * Badge text displayed above title
     */
    badge?: string | null;
    /**
     * Feature list (exactly 3 items)
     */
    features?:
      | {
          /**
           * Lucide icon name
           */
          icon: string;
          /**
           * Feature title
           */
          title: string;
          /**
           * Feature description
           */
          description: string;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero115Fields".
 */
export interface Hero115Fields {
  /**
   * Hero section fields
   */
  hero: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Subtitle text
     */
    subtitle?: string | null;
    /**
     * Text showing trust metrics (e.g., "Trusted by X businesses")
     */
    trustText: string;
    /**
     * Hero image
     */
    image: string | Media;
    /**
     * Hero button
     */
    links?:
      | {
          /**
           * Hero button with Zap suffix icon
           */
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTABlock".
 */
export interface CTABlock {
  style?:
    | ('cta-1' | 'cta-3' | 'cta-4' | 'cta-5' | 'cta-7' | 'cta-10' | 'cta-11' | 'cta-15' | 'cta-16' | 'cta-17')
    | null;
  'cta-1'?: CTA1Fields;
  'cta-3'?: CTA3Fields;
  'cta-4'?: CTA4Fields;
  'cta-5'?: CTA5Fields;
  'cta-7'?: CTA7Fields;
  'cta-10'?: CTA10Fields;
  'cta-11'?: CTA11Fields;
  'cta-15'?: CTA15Fields;
  'cta-16'?: CTA16Fields;
  'cta-17'?: CTA17Fields;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTA1Fields".
 */
export interface CTA1Fields {
  /**
   * CTA section fields
   */
  cta: {
    /**
     * Main title text
     */
    title: string;
    /**
     * Subtitle text
     */
    subtitle?: string | null;
    /**
     * CTA image
     */
    image: string | Media;
    /**
     * Optional: Lucide icon name (e.g., CheckCircle)
     */
    icon: string;
    /**
     * CTA button
     */
    links?:
      | {
          /**
           * CTA button with ArrowRight suffix icon
           */
          'link-1': {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTA3Fields".
 */
export interface CTA3Fields {
  /**
   * CTA section fields
   */
  cta: {
    /**
     * Main title text
     */
    title: string;
    /**
     * Subtitle text
     */
    subtitle?: string | null;
    /**
     * CTA buttons
     */
    buttonLinks?:
      | {
          /**
           * CTA buttons
           */
          'link-1': {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
    /**
     * List of links
     */
    listLinks?:
      | {
          /**
           * List item link
           */
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          /**
           * Description text for the link
           */
          description?: string | null;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTA4Fields".
 */
export interface CTA4Fields {
  /**
   * CTA section fields
   */
  cta: {
    /**
     * Main title text
     */
    title: string;
    /**
     * Subtitle text
     */
    subtitle?: string | null;
    /**
     * CTA buttons
     */
    links?:
      | {
          /**
           * CTA buttons
           */
          'link-1': {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
    /**
     * List with icons
     */
    lists?:
      | {
          /**
           * Optional: Lucide icon name (e.g., CheckCircle)
           */
          icon: string;
          /**
           * List item text
           */
          text: string;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTA5Fields".
 */
export interface CTA5Fields {
  /**
   * CTA section fields
   */
  cta: {
    /**
     * Main title text
     */
    title: string;
    /**
     * Subtitle text
     */
    subtitle?: string | null;
    /**
     * CTA image
     */
    image: string | Media;
    /**
     * CTA links
     */
    links?:
      | {
          /**
           * Primary link
           */
          'link-1': {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTA7Fields".
 */
export interface CTA7Fields {
  /**
   * CTA section fields
   */
  cta: {
    /**
     * Main title text
     */
    title: string;
    /**
     * Subtitle text
     */
    subtitle?: string | null;
    /**
     * CTA buttons
     */
    links?:
      | {
          /**
           * CTA buttons
           */
          'link-1': {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
    /**
     * List with icons
     */
    lists?:
      | {
          /**
           * Optional: Lucide icon name (e.g., CheckCircle)
           */
          icon: string;
          /**
           * List item text
           */
          text: string;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTA10Fields".
 */
export interface CTA10Fields {
  /**
   * CTA section fields
   */
  cta: {
    /**
     * Main title text
     */
    title: string;
    /**
     * Subtitle text
     */
    subtitle?: string | null;
    /**
     * CTA buttons
     */
    links?:
      | {
          /**
           * CTA buttons
           */
          'link-1': {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTA11Fields".
 */
export interface CTA11Fields {
  /**
   * CTA section fields
   */
  cta: {
    /**
     * Main title text
     */
    title: string;
    /**
     * Subtitle text
     */
    subtitle?: string | null;
    /**
     * CTA buttons
     */
    links?:
      | {
          /**
           * CTA buttons
           */
          'link-1': {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTA15Fields".
 */
export interface CTA15Fields {
  /**
   * CTA section fields
   */
  cta: {
    /**
     * Main title text
     */
    title: string;
    /**
     * Subtitle text
     */
    subtitle?: string | null;
    /**
     * The heading text above the title
     */
    heading?: string | null;
    /**
     * CTA image
     */
    image: string | Media;
    /**
     * CTA button
     */
    links?:
      | {
          /**
           * CTA button with ArrowRight suffix icon
           */
          'link-1': {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTA16Fields".
 */
export interface CTA16Fields {
  /**
   * CTA section fields
   */
  cta: {
    /**
     * Main title text
     */
    title: string;
    /**
     * Subtitle text
     */
    subtitle?: string | null;
    /**
     * CTA image
     */
    image: string | Media;
    /**
     * Optional: Lucide icon name (e.g., CheckCircle)
     */
    icon: string;
    /**
     * CTA buttons
     */
    links?:
      | {
          /**
           * CTA buttons
           */
          'link-1': {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTA17Fields".
 */
export interface CTA17Fields {
  /**
   * CTA section fields
   */
  cta: {
    /**
     * Main title text
     */
    title: string;
    /**
     * Subtitle text
     */
    subtitle?: string | null;
    /**
     * CTA buttons
     */
    links?:
      | {
          /**
           * CTA buttons
           */
          'link-1': {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
           */
          prefixIcon?: string | null;
          /**
           * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
           */
          suffixIcon?: string | null;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: string | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (string | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: string | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: string | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: string;
  tenant?: (string | null) | Tenant;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "GalleryBlock".
 */
export interface GalleryBlock {
  style?: ('gallery-1' | 'gallery-3' | 'gallery-4' | 'gallery-5' | 'gallery-6' | 'gallery-9') | null;
  'gallery-1'?: Gallery1Fields;
  'gallery-3'?: Gallery3Fields;
  'gallery-4'?: Gallery4Fields;
  'gallery-5'?: Gallery5Fields;
  'gallery-6'?: Gallery6Fields;
  'gallery-9'?: Gallery9Fields;
  id?: string | null;
  blockName?: string | null;
  blockType: 'gallery';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Gallery1Fields".
 */
export interface Gallery1Fields {
  /**
   * Gallery section fields
   */
  gallery: {
    /**
     * Gallery title
     */
    title: string;
    /**
     * Gallery description
     */
    description?: string | null;
    /**
     * Gallery button
     */
    link: {
      type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: string | Page;
          } | null)
        | ({
            relationTo: 'posts';
            value: string | Post;
          } | null);
      url?: string | null;
      label: string;
      /**
       * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
       */
      prefixIcon?: string | null;
      /**
       * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
       */
      suffixIcon?: string | null;
      /**
       * Choose how the link should be rendered.
       */
      appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
    };
    /**
     * Gallery image
     */
    image: string | Media;
    /**
     * Gallery items (1-6)
     */
    items?:
      | {
          /**
           * Case study title
           */
          title: string;
          /**
           * Case study link
           */
          href: string;
          /**
           * Main image
           */
          image: string | Media;
          /**
           * Company logo
           */
          logo: string | Media;
          /**
           * Company name
           */
          company: string;
          /**
           * List of badges (max 4)
           */
          badges?:
            | {
                text: string;
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Gallery3Fields".
 */
export interface Gallery3Fields {
  /**
   * Gallery section fields
   */
  gallery: {
    /**
     * Gallery title
     */
    title: string;
    /**
     * List of case studies or features (1-10)
     */
    items?:
      | {
          id: string | null;
          /**
           * Title of the case study or feature
           */
          title: string;
          /**
           * Description of the case study or feature
           */
          description: string;
          /**
           * Badge label for the item
           */
          label: string;
          /**
           * Link URL for the item
           */
          href: string;
          /**
           * Image for the case study or feature
           */
          image: string | Media;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Gallery4Fields".
 */
export interface Gallery4Fields {
  /**
   * Gallery section fields
   */
  gallery: {
    /**
     * Gallery title
     */
    title: string;
    /**
     * Gallery items (1-12)
     */
    items?:
      | {
          /**
           * Item title
           */
          title: string;
          /**
           * Item description
           */
          description: string;
          /**
           * Item image
           */
          image: string | Media;
          /**
           * Item link URL
           */
          href: string;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Gallery5Fields".
 */
export interface Gallery5Fields {
  /**
   * Gallery section fields
   */
  gallery: {
    /**
     * Gallery title
     */
    title: string;
    /**
     * Gallery description
     */
    description?: string | null;
    /**
     * CTA Button
     */
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
    /**
     * Gallery items (1-10)
     */
    items?:
      | {
          /**
           * Item title
           */
          title: string;
          /**
           * Item description
           */
          description: string;
          /**
           * Item image
           */
          image: string | Media;
          /**
           * Item link
           */
          href: string;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Gallery6Fields".
 */
export interface Gallery6Fields {
  /**
   * Gallery section fields
   */
  gallery: {
    /**
     * Gallery title
     */
    title: string;
    /**
     * Gallery button
     */
    link: {
      type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: string | Page;
          } | null)
        | ({
            relationTo: 'posts';
            value: string | Post;
          } | null);
      url?: string | null;
      label: string;
      /**
       * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
       */
      prefixIcon?: string | null;
      /**
       * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
       */
      suffixIcon?: string | null;
      /**
       * Choose how the link should be rendered.
       */
      appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
    };
    /**
     * Gallery cards (3-6)
     */
    cards?:
      | {
          /**
           * Card title (max 20 characters)
           */
          title: string;
          /**
           * Card description (max 100 characters)
           */
          excerpt: string;
          /**
           * Card link
           */
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          /**
           * Card image
           */
          image: string | Media;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Gallery9Fields".
 */
export interface Gallery9Fields {
  /**
   * Gallery section fields
   */
  gallery: {
    /**
     * Gallery title
     */
    title: string;
    /**
     * Gallery description
     */
    description?: string | null;
    /**
     * Gallery sections (1-6)
     */
    sections?:
      | {
          /**
           * Section image
           */
          image: string | Media;
          /**
           * Section title
           */
          title: string;
          /**
           * Section text
           */
          text: string;
          /**
           * Section icon name (e.g., Code, GitBranch, Sparkle)
           */
          icon: string;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeatureBlock".
 */
export interface FeatureBlock {
  style?:
    | (
        | 'feature-1'
        | 'feature-2'
        | 'feature-3'
        | 'feature-5'
        | 'feature-6'
        | 'feature-7'
        | 'feature-10'
        | 'feature-11'
        | 'feature-13'
        | 'feature-14'
        | 'feature-15'
      )
    | null;
  'feature-1'?: Feature1Fields;
  'feature-2'?: Feature2Fields;
  'feature-3'?: Feature3Fields;
  'feature-5'?: Feature5Fields;
  'feature-6'?: Feature6Fields;
  'feature-7'?: Feature7Fields;
  'feature-10'?: Feature10Fields;
  'feature-11'?: Feature11Fields;
  'feature-13'?: Feature13Fields;
  'feature-14'?: Feature14Fields;
  'feature-15'?: Feature15Fields;
  id?: string | null;
  blockName?: string | null;
  blockType: 'feature';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Feature1Fields".
 */
export interface Feature1Fields {
  /**
   * Feature section fields
   */
  feature: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Feature description
     */
    description: string;
    /**
     * Author profile image
     */
    image?: (string | null) | Media;
    /**
     * Optional: Lucide icon name (e.g., CheckCircle)
     */
    icon?: string | null;
    /**
     * Feature links
     */
    links?:
      | {
          /**
           * Primary link with icon
           */
          'link-1': {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          /**
           * Secondary link
           */
          'link-2': {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Feature2Fields".
 */
export interface Feature2Fields {
  /**
   * Feature section fields
   */
  feature: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Feature description
     */
    description: string;
    /**
     * Author profile image
     */
    image?: (string | null) | Media;
    /**
     * Optional: Lucide icon name (e.g., CheckCircle)
     */
    icon?: string | null;
    /**
     * Feature links
     */
    links?:
      | {
          /**
           * Primary link with icon
           */
          'link-1': {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          /**
           * Secondary link
           */
          'link-2': {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Feature3Fields".
 */
export interface Feature3Fields {
  /**
   * Feature section fields
   */
  feature: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Feature cards
     */
    features?:
      | {
          /**
           * Lucide icon name
           */
          icon?: string | null;
          /**
           * Feature title
           */
          title: string;
          /**
           * Feature description
           */
          description: string;
          /**
           * Feature image
           */
          image?: (string | null) | Media;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Feature5Fields".
 */
export interface Feature5Fields {
  /**
   * Feature section fields
   */
  feature: {
    /**
     * Feature cards (first card will be larger)
     */
    features?:
      | {
          /**
           * Lucide icon name
           */
          icon?: string | null;
          /**
           * Feature title
           */
          title: string;
          /**
           * Feature description
           */
          description: string;
          /**
           * Feature image
           */
          image?: (string | null) | Media;
          id?: string | null;
        }[]
      | null;
    testimonial: {
      /**
       * Author profile image
       */
      image?: (string | null) | Media;
      /**
       * Testimonial quote text
       */
      quote: string;
      /**
       * Author name
       */
      name: string;
      /**
       * Author role or position
       */
      role: string;
      /**
       * Author company
       */
      company: string;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Feature6Fields".
 */
export interface Feature6Fields {
  /**
   * Feature section fields
   */
  feature: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Feature description
     */
    description: string;
    /**
     * Author profile image
     */
    image?: (string | null) | Media;
    /**
     * Optional: Lucide icon name (e.g., CheckCircle)
     */
    icon?: string | null;
    /**
     * List of features with icons
     */
    features?:
      | {
          /**
           * Optional: Lucide icon name (e.g., CheckCircle)
           */
          icon?: string | null;
          /**
           * List item text
           */
          text: string;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Feature7Fields".
 */
export interface Feature7Fields {
  /**
   * Feature section fields
   */
  feature: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Feature description
     */
    description: string;
    /**
     * Author profile image
     */
    image?: (string | null) | Media;
    /**
     * Optional: Lucide icon name (e.g., CheckCircle)
     */
    icon?: string | null;
    /**
     * List of features with icons
     */
    features?:
      | {
          /**
           * Optional: Lucide icon name (e.g., CheckCircle)
           */
          icon?: string | null;
          /**
           * List item text
           */
          text: string;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Feature10Fields".
 */
export interface Feature10Fields {
  /**
   * Feature section fields
   */
  feature: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Feature description
     */
    description: string;
    /**
     * Feature cards
     */
    features?:
      | {
          /**
           * Lucide icon name
           */
          icon?: string | null;
          /**
           * Feature title
           */
          title: string;
          /**
           * Feature description
           */
          description: string;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Feature11Fields".
 */
export interface Feature11Fields {
  /**
   * Feature section fields
   */
  feature: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Feature description
     */
    description: string;
    /**
     * Author profile image
     */
    image?: (string | null) | Media;
    /**
     * Feature links
     */
    links?:
      | {
          /**
           * Primary link with icon
           */
          'link-1': {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
    /**
     * List of features with icons
     */
    features?:
      | {
          /**
           * Optional: Lucide icon name (e.g., CheckCircle)
           */
          icon?: string | null;
          /**
           * List item text
           */
          text: string;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Feature13Fields".
 */
export interface Feature13Fields {
  /**
   * Feature section fields
   */
  feature: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Feature cards
     */
    features?:
      | {
          /**
           * Feature image
           */
          image?: (string | null) | Media;
          /**
           * Feature subtitle
           */
          subtitle: string;
          /**
           * Feature title
           */
          title: string;
          /**
           * Feature description
           */
          description: string;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Feature14Fields".
 */
export interface Feature14Fields {
  /**
   * Feature section fields
   */
  feature: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Feature cards
     */
    features?:
      | {
          /**
           * Feature image
           */
          image?: (string | null) | Media;
          /**
           * Feature title
           */
          title: string;
          /**
           * Feature description
           */
          description: string;
          /**
           * List of features with icons
           */
          list?:
            | {
                /**
                 * Optional: Lucide icon name (e.g., CheckCircle)
                 */
                icon?: string | null;
                /**
                 * List item text
                 */
                text: string;
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Feature15Fields".
 */
export interface Feature15Fields {
  /**
   * Feature section fields
   */
  feature: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Feature description
     */
    description: string;
    /**
     * Feature subtitle
     */
    subtitle: string;
    /**
     * Feature cards
     */
    features?:
      | {
          /**
           * Lucide icon name
           */
          icon?: string | null;
          /**
           * Feature title
           */
          title: string;
          /**
           * Feature description
           */
          description: string;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialBlock".
 */
export interface TestimonialBlock {
  style?:
    | (
        | 'testimonial-4'
        | 'testimonial-6'
        | 'testimonial-7'
        | 'testimonial-12'
        | 'testimonial-14'
        | 'testimonial-15'
        | 'testimonial-16'
        | 'testimonial-17'
        | 'testimonial-18'
        | 'testimonial-19'
      )
    | null;
  'testimonial-4'?: Testimonial4Fields;
  'testimonial-6'?: Testimonial6Fields;
  'testimonial-7'?: Testimonial7Fields;
  'testimonial-12'?: Testimonial12Fields;
  'testimonial-14'?: Testimonial14Fields;
  'testimonial-15'?: Testimonial15Fields;
  'testimonial-16'?: Testimonial16Fields;
  'testimonial-17'?: Testimonial17Fields;
  'testimonial-18'?: Testimonial18Fields;
  'testimonial-19'?: Testimonial19Fields;
  id?: string | null;
  blockName?: string | null;
  blockType: 'testimonial';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Testimonial4Fields".
 */
export interface Testimonial4Fields {
  /**
   * Featured image displayed in the left column
   */
  featuredImage: string | Media;
  /**
   * Testimonial items (exactly 4 required - 1 featured + 3 grid)
   */
  testimonials: {
    /**
     * Testimonial quote text
     */
    quote: string;
    /**
     * Name of the testimonial author
     */
    authorName: string;
    /**
     * Role/position of the author
     */
    authorRole?: string | null;
    /**
     * Author profile image
     */
    authorImage?: (string | null) | Media;
    id?: string | null;
  }[];
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Testimonial6Fields".
 */
export interface Testimonial6Fields {
  /**
   * Main title for the testimonial section
   */
  title?: string | null;
  /**
   * Testimonial items (3-12)
   */
  testimonials?:
    | {
        /**
         * Testimonial quote text
         */
        quote: string;
        /**
         * Name of the testimonial author
         */
        authorName: string;
        /**
         * Role/position of the author
         */
        authorRole?: string | null;
        /**
         * Author profile image
         */
        authorImage?: (string | null) | Media;
        id?: string | null;
      }[]
    | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Testimonial7Fields".
 */
export interface Testimonial7Fields {
  /**
   * Main title for the testimonial section
   */
  title?: string | null;
  /**
   * Description text below the title
   */
  description?: string | null;
  /**
   * Call-to-action button
   */
  cta: {
    type?: ('reference' | 'custom') | null;
    newTab?: boolean | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null);
    url?: string | null;
    label: string;
    /**
     * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
     */
    prefixIcon?: string | null;
    /**
     * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
     */
    suffixIcon?: string | null;
    /**
     * Choose how the link should be rendered.
     */
    appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
  };
  /**
   * Testimonial items (4-12)
   */
  testimonials?:
    | {
        /**
         * Testimonial quote text
         */
        quote: string;
        /**
         * Name of the testimonial author
         */
        authorName: string;
        /**
         * Role/position of the author
         */
        authorRole?: string | null;
        /**
         * Author profile image
         */
        authorImage?: (string | null) | Media;
        id?: string | null;
      }[]
    | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Testimonial12Fields".
 */
export interface Testimonial12Fields {
  /**
   * Testimonial items (1-10)
   */
  testimonials?:
    | {
        /**
         * Testimonial quote text
         */
        quote: string;
        /**
         * Name of the testimonial author
         */
        authorName: string;
        /**
         * Role/position of the author
         */
        authorRole?: string | null;
        /**
         * Author profile image
         */
        authorImage?: (string | null) | Media;
        /**
         * Name of the company
         */
        companyName: string;
        /**
         * Company logo
         */
        companyLogo: string | Media;
        /**
         * Monthly active users metric (e.g. 2.2x)
         */
        monthlyActiveUsers: string;
        /**
         * Label for monthly active users metric
         */
        monthlyActiveUsersLabel: string;
        /**
         * Time period for monthly active users metric
         */
        monthlyActiveUsersPeriod: string;
        /**
         * Revenue increase metric (e.g. 256%)
         */
        revenueIncrease: string;
        /**
         * Label for revenue increase metric
         */
        revenueIncreaseLabel: string;
        /**
         * Time period for revenue increase metric
         */
        revenueIncreasePeriod: string;
        id?: string | null;
      }[]
    | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Testimonial14Fields".
 */
export interface Testimonial14Fields {
  /**
   * Testimonial items (1-10)
   */
  testimonials: {
    /**
     * Testimonial quote text
     */
    quote: string;
    /**
     * Name of the testimonial author
     */
    authorName: string;
    /**
     * Role/position of the author
     */
    authorRole?: string | null;
    /**
     * Author profile image
     */
    authorImage?: (string | null) | Media;
    /**
     * Rating out of 5 stars
     */
    rating?: number | null;
    id?: string | null;
  }[];
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Testimonial15Fields".
 */
export interface Testimonial15Fields {
  /**
   * Main title for the testimonial section
   */
  title?: string | null;
  /**
   * Description text below the title
   */
  description?: string | null;
  /**
   * Call-to-action button
   */
  cta: {
    type?: ('reference' | 'custom') | null;
    newTab?: boolean | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null);
    url?: string | null;
    label: string;
    /**
     * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
     */
    prefixIcon?: string | null;
    /**
     * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
     */
    suffixIcon?: string | null;
    /**
     * Choose how the link should be rendered.
     */
    appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
  };
  /**
   * Company section configuration
   */
  companySection?: {
    /**
     * Text displayed above company logos
     */
    text?: string | null;
    /**
     * Company logos (1-5)
     */
    logos?:
      | {
          /**
           * Company logo image
           */
          image: string | Media;
          id?: string | null;
        }[]
      | null;
  };
  /**
   * Testimonial items (exactly 4 required)
   */
  testimonials?:
    | {
        /**
         * Testimonial quote text
         */
        quote: string;
        /**
         * Name of the testimonial author
         */
        authorName: string;
        /**
         * Author profile image
         */
        authorImage?: (string | null) | Media;
        id?: string | null;
      }[]
    | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Testimonial16Fields".
 */
export interface Testimonial16Fields {
  /**
   * Main heading text
   */
  heading?: string | null;
  /**
   * Subheading text
   */
  subheading?: string | null;
  /**
   * Tweet-style testimonials (3-12)
   */
  testimonials?:
    | {
        /**
         * Name of the testimonial author
         */
        authorName: string;
        /**
         * Author profile image
         */
        authorImage?: (string | null) | Media;
        /**
         * Social media tag/handle (e.g., @username)
         */
        tag: string;
        /**
         * Full testimonial content
         */
        content: string;
        id?: string | null;
      }[]
    | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Testimonial17Fields".
 */
export interface Testimonial17Fields {
  /**
   * Main heading text
   */
  heading?: string | null;
  /**
   * Testimonial items (exactly 3 required)
   */
  testimonials?:
    | {
        /**
         * Company logo image
         */
        logo: string | Media;
        /**
         * Alternative text for company logo
         */
        logoAlt: string;
        /**
         * Testimonial quote text
         */
        quote: string;
        /**
         * Name of the testimonial author
         */
        authorName: string;
        /**
         * Role/position of the author
         */
        authorRole?: string | null;
        /**
         * Author profile image
         */
        authorImage?: (string | null) | Media;
        id?: string | null;
      }[]
    | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Testimonial18Fields".
 */
export interface Testimonial18Fields {
  /**
   * Main heading text
   */
  heading?: string | null;
  /**
   * Subheading text
   */
  subheading?: string | null;
  /**
   * Stats text shown with icon
   */
  statsText?: string | null;
  /**
   * Single testimonial content
   */
  testimonial: {
    /**
     * Testimonial quote text
     */
    quote: string;
    /**
     * Detailed testimonial description
     */
    description: string;
    /**
     * Name of the testimonial author
     */
    authorName: string;
    /**
     * Role/position of the author
     */
    authorRole?: string | null;
    /**
     * Author profile image
     */
    authorImage?: (string | null) | Media;
    /**
     * Rating out of 5 stars
     */
    rating?: number | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Testimonial19Fields".
 */
export interface Testimonial19Fields {
  /**
   * Main heading text
   */
  heading?: string | null;
  /**
   * Subheading text
   */
  subheading?: string | null;
  /**
   * Stats text shown with icon
   */
  statsText?: string | null;
  /**
   * View all testimonials link
   */
  viewAll: {
    type?: ('reference' | 'custom') | null;
    newTab?: boolean | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null);
    url?: string | null;
    label: string;
    /**
     * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
     */
    prefixIcon?: string | null;
    /**
     * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
     */
    suffixIcon?: string | null;
    /**
     * Choose how the link should be rendered.
     */
    appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
  };
  /**
   * Testimonial items (3-12)
   */
  testimonials?:
    | {
        /**
         * Testimonial quote text
         */
        quote: string;
        /**
         * Name of the testimonial author
         */
        authorName: string;
        /**
         * Role/position of the author
         */
        authorRole?: string | null;
        /**
         * Author profile image
         */
        authorImage?: (string | null) | Media;
        /**
         * Rating out of 5 stars
         */
        rating?: number | null;
        id?: string | null;
      }[]
    | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContactBlock".
 */
export interface ContactBlock {
  style?:
    | ('contact-1' | 'contact-2' | 'contact-3' | 'contact-4' | 'contact-5' | 'contact-6' | 'contact-7' | 'contact-8')
    | null;
  'contact-1'?: Contact1Fields;
  'contact-2'?: Contact2Fields;
  'contact-3'?: Contact3Fields;
  'contact-4'?: Contact4Fields;
  'contact-5'?: Contact5Fields;
  'contact-6'?: Contact6Fields;
  'contact-7'?: Contact7Fields;
  'contact-8'?: Contact8Fields;
  id?: string | null;
  blockName?: string | null;
  blockType: 'contact';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Contact1Fields".
 */
export interface Contact1Fields {
  /**
   * Contact form fields
   */
  contact: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Feature description
     */
    description: string;
    /**
     * List with icons
     */
    list?:
      | {
          /**
           * Lucide icon name (e.g., Check)
           */
          icon: string;
          /**
           * List item text
           */
          text: string;
          id?: string | null;
        }[]
      | null;
    /**
     * Avatar fields
     */
    avatars?:
      | {
          /**
           * Media
           */
          image: string | Media;
          id?: string | null;
        }[]
      | null;
    /**
     * Logo fields
     */
    logos?:
      | {
          /**
           * Media
           */
          image: string | Media;
          id?: string | null;
        }[]
      | null;
    /**
     * Contact form
     */
    form: {
      submitButton: {
        /**
         * Submit button text
         */
        label: string;
      };
      /**
       * Fields
       */
      fields?:
        | {
            formField: {
              /**
               * Input field label
               */
              label: string;
              /**
               * Input field placeholder
               */
              placeholder: string;
              /**
               * Is this field required?
               */
              required: 'yes' | 'no';
              /**
               * Input field type
               */
              type: 'text' | 'email' | 'textarea' | 'tel' | 'number' | 'select' | 'radio';
              /**
               * Options for select/radio fields
               */
              options?:
                | {
                    /**
                     * Option label
                     */
                    label: string;
                    /**
                     * Option value
                     */
                    value: string;
                    id?: string | null;
                  }[]
                | null;
            };
            id?: string | null;
          }[]
        | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Contact2Fields".
 */
export interface Contact2Fields {
  /**
   * Contact form fields
   */
  contact: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Feature description
     */
    description: string;
    /**
     * List
     */
    list?:
      | {
          /**
           * List item text
           */
          text: string;
          id?: string | null;
        }[]
      | null;
    /**
     * Contact form
     */
    form: {
      submitButton: {
        /**
         * Submit button text
         */
        label: string;
      };
      /**
       * Fields
       */
      fields?:
        | {
            formField: {
              /**
               * Input field label
               */
              label: string;
              /**
               * Input field placeholder
               */
              placeholder: string;
              /**
               * Is this field required?
               */
              required: 'yes' | 'no';
              /**
               * Input field type
               */
              type: 'text' | 'email' | 'textarea' | 'tel' | 'number' | 'select' | 'radio';
              /**
               * Options for select/radio fields
               */
              options?:
                | {
                    /**
                     * Option label
                     */
                    label: string;
                    /**
                     * Option value
                     */
                    value: string;
                    id?: string | null;
                  }[]
                | null;
            };
            id?: string | null;
          }[]
        | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Contact3Fields".
 */
export interface Contact3Fields {
  /**
   * Contact form fields
   */
  contact: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Feature subtitle
     */
    subtitle: string;
    /**
     * Links
     */
    links?:
      | {
          /**
           * Link button
           */
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
    /**
     * Support list
     */
    supportList?: {
      /**
       * Support cards
       */
      supports?:
        | {
            /**
             * Lucide icon name
             */
            icon?: string | null;
            /**
             * Feature subtitle
             */
            subtitle: string;
            /**
             * Feature title
             */
            title: string;
            /**
             * Support card link
             */
            link: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              label: string;
              /**
               * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
               */
              prefixIcon?: string | null;
              /**
               * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
               */
              suffixIcon?: string | null;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
            };
            id?: string | null;
          }[]
        | null;
    };
    /**
     * Office list
     */
    officeList: {
      /**
       * Feature title
       */
      title: string;
      /**
       * Office cards
       */
      offices?:
        | {
            /**
             * Feature subtitle
             */
            subtitle: string;
            /**
             * Feature title
             */
            title: string;
            id?: string | null;
          }[]
        | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Contact4Fields".
 */
export interface Contact4Fields {
  /**
   * Contact form fields
   */
  contact: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Feature subtitle
     */
    subtitle: string;
    /**
     * Support list
     */
    supportList?: {
      /**
       * Support cards
       */
      supports?:
        | {
            /**
             * Feature title
             */
            title: string;
            /**
             * Feature subtitle
             */
            subtitle: string;
            /**
             * Support card link
             */
            link: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              label: string;
              /**
               * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
               */
              prefixIcon?: string | null;
              /**
               * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
               */
              suffixIcon?: string | null;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
            };
            id?: string | null;
          }[]
        | null;
    };
    /**
     * Location list
     */
    locationList?: {
      /**
       * Location carousel
       */
      locations?:
        | {
            /**
             * Feature image
             */
            image?: (string | null) | Media;
            /**
             * Feature subtitle
             */
            subtitle: string;
            /**
             * Feature title
             */
            title: string;
            /**
             * Support card link
             */
            link: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              label: string;
              /**
               * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
               */
              prefixIcon?: string | null;
              /**
               * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
               */
              suffixIcon?: string | null;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
            };
            id?: string | null;
          }[]
        | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Contact5Fields".
 */
export interface Contact5Fields {
  /**
   * Contact form fields
   */
  contact: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Feature subtitle
     */
    subtitle: string;
    /**
     * Feature description
     */
    description: string;
    /**
     * Contact form
     */
    form: {
      submitButton: {
        /**
         * Submit button text
         */
        label: string;
      };
      /**
       * Fields
       */
      fields?:
        | {
            formField: {
              /**
               * Input field label
               */
              label: string;
              /**
               * Input field placeholder
               */
              placeholder: string;
              /**
               * Is this field required?
               */
              required: 'yes' | 'no';
              /**
               * Input field type
               */
              type: 'text' | 'email' | 'textarea' | 'tel' | 'number' | 'select' | 'radio';
              /**
               * Options for select/radio fields
               */
              options?:
                | {
                    /**
                     * Option label
                     */
                    label: string;
                    /**
                     * Option value
                     */
                    value: string;
                    id?: string | null;
                  }[]
                | null;
            };
            id?: string | null;
          }[]
        | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Contact6Fields".
 */
export interface Contact6Fields {
  /**
   * Contact form fields
   */
  contact: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Feature subtitle
     */
    subtitle: string;
    /**
     * Feature description
     */
    description: string;
    /**
     * Support list
     */
    supportList?: {
      /**
       * Support cards
       */
      supports?:
        | {
            /**
             * Lucide icon name
             */
            icon?: string | null;
            /**
             * Feature title
             */
            title: string;
            /**
             * Feature subtitle
             */
            subtitle: string;
            /**
             * Support card link
             */
            link: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              label: string;
              /**
               * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
               */
              prefixIcon?: string | null;
              /**
               * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
               */
              suffixIcon?: string | null;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
            };
            id?: string | null;
          }[]
        | null;
    };
    /**
     * Contact form
     */
    form: {
      submitButton: {
        /**
         * Submit button text
         */
        label: string;
      };
      /**
       * Fields
       */
      fields?:
        | {
            formField: {
              /**
               * Input field label
               */
              label: string;
              /**
               * Input field placeholder
               */
              placeholder: string;
              /**
               * Is this field required?
               */
              required: 'yes' | 'no';
              /**
               * Input field type
               */
              type: 'text' | 'email' | 'textarea' | 'tel' | 'number' | 'select' | 'radio';
              /**
               * Options for select/radio fields
               */
              options?:
                | {
                    /**
                     * Option label
                     */
                    label: string;
                    /**
                     * Option value
                     */
                    value: string;
                    id?: string | null;
                  }[]
                | null;
            };
            id?: string | null;
          }[]
        | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Contact7Fields".
 */
export interface Contact7Fields {
  /**
   * Contact form fields
   */
  contact: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Feature subtitle
     */
    subtitle: string;
    /**
     * Feature description
     */
    description: string;
    /**
     * Support list
     */
    supportList?: {
      /**
       * Support cards
       */
      supports?:
        | {
            /**
             * Lucide icon name
             */
            icon?: string | null;
            /**
             * Feature title
             */
            title: string;
            /**
             * Feature subtitle
             */
            subtitle: string;
            /**
             * Support card link
             */
            link: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              label: string;
              /**
               * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
               */
              prefixIcon?: string | null;
              /**
               * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
               */
              suffixIcon?: string | null;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
            };
            id?: string | null;
          }[]
        | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Contact8Fields".
 */
export interface Contact8Fields {
  /**
   * Contact form fields
   */
  contact: {
    /**
     * Feature title
     */
    title: string;
    /**
     * Feature subtitle
     */
    subtitle: string;
    /**
     * Feature image
     */
    image?: (string | null) | Media;
    /**
     * Support list
     */
    supportList: {
      /**
       * Feature title
       */
      title: string;
      /**
       * Support cards
       */
      supports?:
        | {
            /**
             * Support card link
             */
            link: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              label: string;
              /**
               * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
               */
              prefixIcon?: string | null;
              /**
               * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
               */
              suffixIcon?: string | null;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
            };
            id?: string | null;
          }[]
        | null;
    };
    /**
     * Office list
     */
    officeList: {
      /**
       * Feature title
       */
      title: string;
      /**
       * Office cards
       */
      offices?:
        | {
            /**
             * Feature title
             */
            title: string;
            /**
             * Feature subtitle
             */
            subtitle: string;
            id?: string | null;
          }[]
        | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TeamBlock".
 */
export interface TeamBlock {
  style?: ('team-1' | 'team-2' | 'team-3' | 'team-5' | 'team-6') | null;
  'team-1'?: Team1Fields;
  'team-2'?: Team2Fields;
  'team-3'?: Team3Fields;
  'team-5'?: Team5Fields;
  'team-6'?: Team6Fields;
  id?: string | null;
  blockName?: string | null;
  blockType: 'team';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Team1Fields".
 */
export interface Team1Fields {
  /**
   * Team fields
   */
  team: {
    /**
     * Team title
     */
    title: string;
    /**
     * Team subtitle
     */
    subtitle?: string | null;
    /**
     * Team member bio
     */
    description: string;
    /**
     * Members
     */
    people?:
      | {
          /**
           * Team member name
           */
          name: string;
          /**
           * Team member role/position
           */
          role: string;
          /**
           * Team member bio
           */
          description: string;
          /**
           * Team member avatar image
           */
          avatar: string | Media;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Team2Fields".
 */
export interface Team2Fields {
  /**
   * Team fields
   */
  team: {
    /**
     * Team title
     */
    title: string;
    /**
     * Team subtitle
     */
    subtitle?: string | null;
    /**
     * Team member bio
     */
    description: string;
    /**
     * Members
     */
    people?:
      | {
          /**
           * Team member name
           */
          name: string;
          /**
           * Team member role/position
           */
          role: string;
          /**
           * Team member bio
           */
          description: string;
          /**
           * Team member avatar image
           */
          avatar: string | Media;
          /**
           * Member social links
           */
          links?:
            | {
                /**
                 * Link
                 */
                link?: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null);
                  url?: string | null;
                  /**
                   * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
                   */
                  prefixIcon?: string | null;
                  /**
                   * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
                   */
                  suffixIcon?: string | null;
                  /**
                   * Choose how the link should be rendered.
                   */
                  appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
                };
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Team3Fields".
 */
export interface Team3Fields {
  /**
   * Team fields
   */
  team: {
    /**
     * Team title
     */
    title: string;
    /**
     * Team subtitle
     */
    subtitle?: string | null;
    /**
     * Team member bio
     */
    description: string;
    /**
     * Links
     */
    links?:
      | {
          /**
           * Link button
           */
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
    /**
     * Members
     */
    people?:
      | {
          /**
           * Team member name
           */
          name: string;
          /**
           * Team member role/position
           */
          role: string;
          /**
           * Team member bio
           */
          description: string;
          /**
           * Team member avatar image
           */
          avatar: string | Media;
          /**
           * Member social links
           */
          links?:
            | {
                /**
                 * Link
                 */
                link?: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null);
                  url?: string | null;
                  /**
                   * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
                   */
                  prefixIcon?: string | null;
                  /**
                   * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
                   */
                  suffixIcon?: string | null;
                  /**
                   * Choose how the link should be rendered.
                   */
                  appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
                };
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Team5Fields".
 */
export interface Team5Fields {
  /**
   * Team fields
   */
  team: {
    /**
     * Team title
     */
    title: string;
    /**
     * Team subtitle
     */
    subtitle?: string | null;
    /**
     * Team member bio
     */
    description: string;
    /**
     * Links
     */
    links?:
      | {
          /**
           * Link button
           */
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
    /**
     * Members
     */
    people?:
      | {
          /**
           * Team member name
           */
          name: string;
          /**
           * Team member role/position
           */
          role: string;
          /**
           * Team member bio
           */
          description: string;
          /**
           * Team member avatar image
           */
          avatar: string | Media;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Team6Fields".
 */
export interface Team6Fields {
  /**
   * Team fields
   */
  team: {
    /**
     * Team title
     */
    title: string;
    /**
     * Team subtitle
     */
    subtitle?: string | null;
    /**
     * Team member bio
     */
    description: string;
    /**
     * Members
     */
    people?:
      | {
          /**
           * Team member name
           */
          name: string;
          /**
           * Team member role/position
           */
          role: string;
          /**
           * Team member bio
           */
          description: string;
          /**
           * Team member avatar image
           */
          avatar: string | Media;
          /**
           * Member social links
           */
          links?:
            | {
                /**
                 * Link
                 */
                link?: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null);
                  url?: string | null;
                  /**
                   * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
                   */
                  prefixIcon?: string | null;
                  /**
                   * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
                   */
                  suffixIcon?: string | null;
                  /**
                   * Choose how the link should be rendered.
                   */
                  appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
                };
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQBlock".
 */
export interface FAQBlock {
  style?: ('faq-1' | 'faq-2' | 'faq-3' | 'faq-4' | 'faq-5' | 'faq-6') | null;
  'faq-1'?: FAQ1Fields;
  'faq-2'?: FAQ2Fields;
  'faq-3'?: FAQ3Fields;
  'faq-4'?: FAQ4Fields;
  'faq-5'?: FAQ5Fields;
  'faq-6'?: FAQ6Fields;
  id?: string | null;
  blockName?: string | null;
  blockType: 'faq';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQ1Fields".
 */
export interface FAQ1Fields {
  /**
   * FAQ fields
   */
  faq: {
    /**
     * FAQ title
     */
    title: string;
    /**
     * List FAQ
     */
    faqs?:
      | {
          /**
           * Question
           */
          question: string;
          /**
           * Answer
           */
          answer: string;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQ2Fields".
 */
export interface FAQ2Fields {
  /**
   * FAQ fields
   */
  faq: {
    /**
     * FAQ title
     */
    title: string;
    /**
     * List FAQ
     */
    faqs?:
      | {
          /**
           * Question
           */
          question: string;
          /**
           * Answer
           */
          answer: string;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQ3Fields".
 */
export interface FAQ3Fields {
  /**
   * FAQ fields
   */
  faq: {
    /**
     * FAQ title
     */
    title: string;
    /**
     * FAQ subtitle
     */
    subtitle?: string | null;
    /**
     * List FAQ
     */
    faqs?:
      | {
          /**
           * Question
           */
          question: string;
          /**
           * Answer
           */
          answer: string;
          id?: string | null;
        }[]
      | null;
    /**
     * Support list
     */
    support: {
      /**
       * FAQ title
       */
      title: string;
      /**
       * FAQ subtitle
       */
      subtitle?: string | null;
      /**
       * Support link
       */
      supportLink?:
        | {
            /**
             * Support link
             */
            link: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              label: string;
              /**
               * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
               */
              prefixIcon?: string | null;
              /**
               * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
               */
              suffixIcon?: string | null;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
            };
            id?: string | null;
          }[]
        | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQ4Fields".
 */
export interface FAQ4Fields {
  /**
   * FAQ fields
   */
  faq: {
    /**
     * FAQ title
     */
    title: string;
    /**
     * FAQ subtitle
     */
    subtitle?: string | null;
    /**
     * FAQ description
     */
    description?: string | null;
    /**
     * List FAQ
     */
    faqs?:
      | {
          /**
           * Question
           */
          question: string;
          /**
           * Answer
           */
          answer: string;
          id?: string | null;
        }[]
      | null;
    /**
     * Support list
     */
    support: {
      /**
       * FAQ title
       */
      title: string;
      /**
       * FAQ subtitle
       */
      subtitle?: string | null;
      /**
       * Support link
       */
      supportLink?:
        | {
            /**
             * Support link
             */
            link: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              label: string;
              /**
               * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
               */
              prefixIcon?: string | null;
              /**
               * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
               */
              suffixIcon?: string | null;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
            };
            id?: string | null;
          }[]
        | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQ5Fields".
 */
export interface FAQ5Fields {
  /**
   * FAQ fields
   */
  faq: {
    /**
     * FAQ title
     */
    title: string;
    /**
     * FAQ subtitle
     */
    subtitle?: string | null;
    /**
     * FAQ description
     */
    description?: string | null;
    /**
     * List FAQ
     */
    faqs?:
      | {
          /**
           * Question
           */
          question: string;
          /**
           * Answer
           */
          answer: string;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQ6Fields".
 */
export interface FAQ6Fields {
  /**
   * FAQ fields
   */
  faq: {
    /**
     * FAQ title
     */
    title: string;
    /**
     * FAQ subtitle
     */
    subtitle?: string | null;
    /**
     * FAQ description
     */
    description?: string | null;
    /**
     * List FAQ
     */
    faqs?:
      | {
          /**
           * Question
           */
          question: string;
          /**
           * Answer
           */
          answer: string;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LogosBlock".
 */
export interface LogosBlock {
  style?: ('logos-1' | 'logos-2' | 'logos-3' | 'logos-8') | null;
  'logos-1'?: Logos1Fields;
  'logos-2'?: Logos2Fields;
  'logos-3'?: Logos3Fields;
  'logos-8'?: Logos8Fields;
  id?: string | null;
  blockName?: string | null;
  blockType: 'logos';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Logos1Fields".
 */
export interface Logos1Fields {
  /**
   * Logos fields
   */
  logos: {
    /**
     * Main title text
     */
    title: string;
    /**
     * Logo images (1-5)
     */
    logos?:
      | {
          /**
           * Logo image
           */
          logo: string | Media;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Logos2Fields".
 */
export interface Logos2Fields {
  /**
   * Logos fields
   */
  logos: {
    /**
     * Main title text
     */
    title: string;
    /**
     * Description text
     */
    description?: string | null;
    /**
     * Button link
     */
    link: {
      type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: string | Page;
          } | null)
        | ({
            relationTo: 'posts';
            value: string | Post;
          } | null);
      url?: string | null;
      label: string;
      /**
       * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
       */
      prefixIcon?: string | null;
      /**
       * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
       */
      suffixIcon?: string | null;
      /**
       * Choose how the link should be rendered.
       */
      appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
    };
    /**
     * Logo images (6 required)
     */
    logos?:
      | {
          /**
           * Logo image
           */
          logo: string | Media;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Logos3Fields".
 */
export interface Logos3Fields {
  /**
   * Logos fields
   */
  logos: {
    /**
     * Main title text
     */
    title: string;
    /**
     * Logo images (7-12)
     */
    logos?:
      | {
          /**
           * Logo image
           */
          logo: string | Media;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Logos8Fields".
 */
export interface Logos8Fields {
  /**
   * Logos fields
   */
  logos: {
    /**
     * Main title text
     */
    title: string;
    /**
     * Description text
     */
    description?: string | null;
    /**
     * Logo images (1-12)
     */
    logos?:
      | {
          /**
           * Logo image
           */
          logo: string | Media;
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  tenant?: (string | null) | Tenant;
  style?: ('header-1' | 'header-3' | 'header-5') | null;
  'header-1'?: Header1Fields;
  'header-3'?: Header3Fields;
  'header-5'?: Header5Fields;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Header1Fields".
 */
export interface Header1Fields {
  /**
   * Header fields
   */
  header: {
    /**
     * Header logo
     */
    logo: string | Media;
    title: string;
    /**
     * Header navigation columns
     */
    menu?:
      | {
          /**
           * Parent link
           */
          parentLink: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          /**
           * Links in this column
           */
          subMenu?:
            | {
                /**
                 * Navigation link
                 */
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null);
                  url?: string | null;
                  label: string;
                  /**
                   * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
                   */
                  prefixIcon?: string | null;
                  /**
                   * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
                   */
                  suffixIcon?: string | null;
                  /**
                   * Choose how the link should be rendered.
                   */
                  appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
                };
                /**
                 * Description for this sub menu
                 */
                description: string;
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
    rightSideLinks?:
      | {
          /**
           * Right side link
           */
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Header3Fields".
 */
export interface Header3Fields {
  /**
   * Header fields
   */
  header: {
    /**
     * Header logo
     */
    logo: string | Media;
    rightLinks?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
  };
  menu?:
    | {
        /**
         * Menu
         */
        parentMenu: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
           */
          prefixIcon?: string | null;
          /**
           * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
           */
          suffixIcon?: string | null;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
        };
        submenu?: {
          style?: ('style-1' | 'style-2' | 'style-3' | 'style-4') | null;
          style1Config?: {
            leftSection?: {
              link?: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?:
                  | ({
                      relationTo: 'pages';
                      value: string | Page;
                    } | null)
                  | ({
                      relationTo: 'posts';
                      value: string | Post;
                    } | null);
                url?: string | null;
                /**
                 * Image URL for the link
                 */
                image?: (string | null) | Media;
                /**
                 * Title for the link
                 */
                title?: string | null;
                /**
                 * Description for the link
                 */
                description?: string | null;
                /**
                 * Choose how the link should be rendered.
                 */
                appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
              };
            };
            rightSection: {
              title: string;
              links?:
                | {
                    link?: {
                      type?: ('reference' | 'custom') | null;
                      newTab?: boolean | null;
                      reference?:
                        | ({
                            relationTo: 'pages';
                            value: string | Page;
                          } | null)
                        | ({
                            relationTo: 'posts';
                            value: string | Post;
                          } | null);
                      url?: string | null;
                      /**
                       * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
                       */
                      prefixIcon?: string | null;
                      /**
                       * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
                       */
                      suffixIcon?: string | null;
                      /**
                       * Title for the link
                       */
                      title?: string | null;
                      /**
                       * Description for the link
                       */
                      description?: string | null;
                      /**
                       * Choose how the link should be rendered.
                       */
                      appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
                    };
                    id?: string | null;
                  }[]
                | null;
            };
          };
          style2Config?: {
            leftSection: {
              title: string;
              links?:
                | {
                    link: {
                      type?: ('reference' | 'custom') | null;
                      newTab?: boolean | null;
                      reference?:
                        | ({
                            relationTo: 'pages';
                            value: string | Page;
                          } | null)
                        | ({
                            relationTo: 'posts';
                            value: string | Post;
                          } | null);
                      url?: string | null;
                      label: string;
                      /**
                       * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
                       */
                      prefixIcon?: string | null;
                      /**
                       * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
                       */
                      suffixIcon?: string | null;
                      /**
                       * Choose how the link should be rendered.
                       */
                      appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
                    };
                    id?: string | null;
                  }[]
                | null;
            };
            rightSection?: {
              link?: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?:
                  | ({
                      relationTo: 'pages';
                      value: string | Page;
                    } | null)
                  | ({
                      relationTo: 'posts';
                      value: string | Post;
                    } | null);
                url?: string | null;
                /**
                 * Image URL for the link
                 */
                image?: (string | null) | Media;
                /**
                 * Title for the link
                 */
                title?: string | null;
                /**
                 * Subtitle for the link
                 */
                subtitle?: string | null;
                /**
                 * Description for the link
                 */
                description?: string | null;
              };
            };
          };
          style3Config?: {
            leftSection: {
              title: string;
              description: string;
              links?:
                | {
                    link: {
                      type?: ('reference' | 'custom') | null;
                      newTab?: boolean | null;
                      reference?:
                        | ({
                            relationTo: 'pages';
                            value: string | Page;
                          } | null)
                        | ({
                            relationTo: 'posts';
                            value: string | Post;
                          } | null);
                      url?: string | null;
                      label: string;
                      /**
                       * Choose how the link should be rendered.
                       */
                      appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
                    };
                    id?: string | null;
                  }[]
                | null;
            };
            rightSection?: {
              links?:
                | {
                    link?: {
                      type?: ('reference' | 'custom') | null;
                      newTab?: boolean | null;
                      reference?:
                        | ({
                            relationTo: 'pages';
                            value: string | Page;
                          } | null)
                        | ({
                            relationTo: 'posts';
                            value: string | Post;
                          } | null);
                      url?: string | null;
                      /**
                       * Image URL for the link
                       */
                      image?: (string | null) | Media;
                      /**
                       * Title for the link
                       */
                      title?: string | null;
                      /**
                       * Description for the link
                       */
                      description?: string | null;
                      /**
                       * Choose how the link should be rendered.
                       */
                      appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
                    };
                    id?: string | null;
                  }[]
                | null;
            };
          };
          style4Config?: {
            leftSection: {
              title: string;
              links?:
                | {
                    link?: {
                      type?: ('reference' | 'custom') | null;
                      newTab?: boolean | null;
                      reference?:
                        | ({
                            relationTo: 'pages';
                            value: string | Page;
                          } | null)
                        | ({
                            relationTo: 'posts';
                            value: string | Post;
                          } | null);
                      url?: string | null;
                      /**
                       * Title for the link
                       */
                      title?: string | null;
                      /**
                       * Description for the link
                       */
                      description?: string | null;
                    };
                    id?: string | null;
                  }[]
                | null;
            };
            rightSection: {
              title: string;
              links?:
                | {
                    link?: {
                      type?: ('reference' | 'custom') | null;
                      newTab?: boolean | null;
                      reference?:
                        | ({
                            relationTo: 'pages';
                            value: string | Page;
                          } | null)
                        | ({
                            relationTo: 'posts';
                            value: string | Post;
                          } | null);
                      url?: string | null;
                      /**
                       * Image URL for the link
                       */
                      image?: (string | null) | Media;
                      /**
                       * Title for the link
                       */
                      title?: string | null;
                      /**
                       * Description for the link
                       */
                      description?: string | null;
                    };
                    id?: string | null;
                  }[]
                | null;
            };
          };
        };
        id?: string | null;
      }[]
    | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Header5Fields".
 */
export interface Header5Fields {
  /**
   * Header fields
   */
  header: {
    /**
     * Header logo
     */
    logo: string | Media;
    title: string;
    /**
     * Header navigation columns
     */
    menu?:
      | {
          /**
           * Parent link
           */
          parentLink: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          /**
           * Links in this column
           */
          subMenus?:
            | {
                /**
                 * Navigation link
                 */
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null);
                  url?: string | null;
                  label: string;
                  /**
                   * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
                   */
                  prefixIcon?: string | null;
                  /**
                   * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
                   */
                  suffixIcon?: string | null;
                  /**
                   * Choose how the link should be rendered.
                   */
                  appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
                };
                /**
                 * Description for this sub menu
                 */
                description: string;
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
    rightSideLinks?:
      | {
          /**
           * Right side link
           */
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  tenant?: (string | null) | Tenant;
  style?:
    | (
        | 'footer-1'
        | 'footer-2'
        | 'footer-3'
        | 'footer-4'
        | 'footer-5'
        | 'footer-6'
        | 'footer-7'
        | 'footer-8'
        | 'footer-9'
        | 'footer-10'
      )
    | null;
  'footer-1'?: Footer1Fields;
  'footer-2'?: Footer2Fields;
  'footer-3'?: Footer3Fields;
  'footer-4'?: Footer4Fields;
  'footer-5'?: Footer5Fields;
  'footer-6'?: Footer6Fields;
  'footer-7'?: Footer7Fields;
  'footer-8'?: Footer8Fields;
  'footer-9'?: Footer9Fields;
  'footer-10'?: Footer10Fields;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Footer1Fields".
 */
export interface Footer1Fields {
  /**
   * Footer fields
   */
  footer: {
    /**
     * Footer copyright
     */
    copyright?: string | null;
    /**
     * Footer logo
     */
    logo: string | Media;
    /**
     * Footer navigation columns
     */
    sections?:
      | {
          /**
           * Title for this footer column
           */
          title: string;
          /**
           * Links in this column
           */
          links?:
            | {
                /**
                 * Navigation link
                 */
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null);
                  url?: string | null;
                  label: string;
                  /**
                   * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
                   */
                  prefixIcon?: string | null;
                  /**
                   * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
                   */
                  suffixIcon?: string | null;
                  /**
                   * Choose how the link should be rendered.
                   */
                  appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
                };
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
    /**
     * Support list
     */
    rightLinks: {
      /**
       * Footer title
       */
      title: string;
      /**
       * Support cards
       */
      links?:
        | {
            /**
             * Link
             */
            link?: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              /**
               * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
               */
              prefixIcon?: string | null;
              /**
               * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
               */
              suffixIcon?: string | null;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
            };
            id?: string | null;
          }[]
        | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Footer2Fields".
 */
export interface Footer2Fields {
  /**
   * Footer fields
   */
  footer: {
    /**
     * Footer title
     */
    title: string;
    /**
     * Footer subtitle
     */
    subtitle?: string | null;
    /**
     * Footer copyright
     */
    copyright?: string | null;
    /**
     * Footer logo
     */
    logo: string | Media;
    /**
     * Footer navigation columns
     */
    sections?:
      | {
          /**
           * Title for this footer column
           */
          title: string;
          /**
           * Links in this column
           */
          links?:
            | {
                /**
                 * Navigation link
                 */
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null);
                  url?: string | null;
                  label: string;
                  /**
                   * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
                   */
                  prefixIcon?: string | null;
                  /**
                   * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
                   */
                  suffixIcon?: string | null;
                  /**
                   * Choose how the link should be rendered.
                   */
                  appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
                };
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
    rightLinks?: {
      links?:
        | {
            /**
             * Link
             */
            link: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              label: string;
              /**
               * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
               */
              prefixIcon?: string | null;
              /**
               * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
               */
              suffixIcon?: string | null;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
            };
            id?: string | null;
          }[]
        | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Footer3Fields".
 */
export interface Footer3Fields {
  /**
   * Footer fields
   */
  footer: {
    /**
     * Footer copyright
     */
    copyright?: string | null;
    /**
     * Footer logo
     */
    logo: string | Media;
    /**
     * Footer navigation columns
     */
    sections?:
      | {
          /**
           * Title for this footer column
           */
          title: string;
          /**
           * Links in this column
           */
          links?:
            | {
                /**
                 * Navigation link
                 */
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null);
                  url?: string | null;
                  label: string;
                  /**
                   * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
                   */
                  prefixIcon?: string | null;
                  /**
                   * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
                   */
                  suffixIcon?: string | null;
                  /**
                   * Choose how the link should be rendered.
                   */
                  appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
                };
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
    rightLinks?: {
      links?:
        | {
            /**
             * Link
             */
            link: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              label: string;
              /**
               * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
               */
              prefixIcon?: string | null;
              /**
               * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
               */
              suffixIcon?: string | null;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
            };
            id?: string | null;
          }[]
        | null;
    };
    socialLinks?: {
      links?:
        | {
            /**
             * Link
             */
            link?: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              /**
               * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
               */
              prefixIcon?: string | null;
              /**
               * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
               */
              suffixIcon?: string | null;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
            };
            id?: string | null;
          }[]
        | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Footer4Fields".
 */
export interface Footer4Fields {
  /**
   * Footer fields
   */
  footer: {
    /**
     * Footer copyright
     */
    copyright?: string | null;
    /**
     * Footer logo
     */
    logo: string | Media;
    /**
     * Footer navigation columns
     */
    sections?:
      | {
          /**
           * Title for this footer column
           */
          title: string;
          /**
           * Links in this column
           */
          links?:
            | {
                /**
                 * Navigation link
                 */
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null);
                  url?: string | null;
                  label: string;
                  /**
                   * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
                   */
                  prefixIcon?: string | null;
                  /**
                   * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
                   */
                  suffixIcon?: string | null;
                  /**
                   * Choose how the link should be rendered.
                   */
                  appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
                };
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
    leftLinks?: {
      links?:
        | {
            /**
             * Link
             */
            link: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              label: string;
              /**
               * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
               */
              prefixIcon?: string | null;
              /**
               * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
               */
              suffixIcon?: string | null;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
            };
            id?: string | null;
          }[]
        | null;
    };
    socialLinks?: {
      links?:
        | {
            /**
             * Link
             */
            link?: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              /**
               * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
               */
              prefixIcon?: string | null;
              /**
               * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
               */
              suffixIcon?: string | null;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
            };
            id?: string | null;
          }[]
        | null;
    };
    newsletter: {
      /**
       * Footer title
       */
      title: string;
      /**
       * Footer subtitle
       */
      subtitle?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Footer5Fields".
 */
export interface Footer5Fields {
  /**
   * Footer fields
   */
  footer: {
    /**
     * Footer copyright
     */
    copyright?: string | null;
    /**
     * Footer navigation columns
     */
    sections?:
      | {
          /**
           * Title for this footer column
           */
          title: string;
          /**
           * Links in this column
           */
          links?:
            | {
                /**
                 * Navigation link
                 */
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null);
                  url?: string | null;
                  label: string;
                  /**
                   * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
                   */
                  prefixIcon?: string | null;
                  /**
                   * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
                   */
                  suffixIcon?: string | null;
                  /**
                   * Choose how the link should be rendered.
                   */
                  appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
                };
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
    socialLinks: {
      /**
       * Footer title
       */
      title: string;
      links?:
        | {
            /**
             * Link
             */
            link?: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              /**
               * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
               */
              prefixIcon?: string | null;
              /**
               * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
               */
              suffixIcon?: string | null;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
            };
            id?: string | null;
          }[]
        | null;
    };
    appLinks: {
      /**
       * Footer title
       */
      title: string;
      links?:
        | {
            /**
             * Link
             */
            link?: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              /**
               * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
               */
              prefixIcon?: string | null;
              /**
               * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
               */
              suffixIcon?: string | null;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
            };
            id?: string | null;
          }[]
        | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Footer6Fields".
 */
export interface Footer6Fields {
  /**
   * Footer fields
   */
  footer: {
    /**
     * Footer title
     */
    title: string;
    /**
     * Footer subtitle
     */
    subtitle?: string | null;
    /**
     * Footer copyright
     */
    copyright?: string | null;
    /**
     * Footer logo
     */
    logo: string | Media;
    /**
     * Footer navigation columns
     */
    sections?:
      | {
          /**
           * Title for this footer column
           */
          title: string;
          /**
           * Links in this column
           */
          links?:
            | {
                /**
                 * Navigation link
                 */
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null);
                  url?: string | null;
                  label: string;
                  /**
                   * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
                   */
                  prefixIcon?: string | null;
                  /**
                   * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
                   */
                  suffixIcon?: string | null;
                  /**
                   * Choose how the link should be rendered.
                   */
                  appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
                };
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
    rightLinks?: {
      links?:
        | {
            /**
             * Link
             */
            link: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              label: string;
              /**
               * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
               */
              prefixIcon?: string | null;
              /**
               * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
               */
              suffixIcon?: string | null;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
            };
            id?: string | null;
          }[]
        | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Footer7Fields".
 */
export interface Footer7Fields {
  /**
   * Footer fields
   */
  footer: {
    /**
     * Footer title
     */
    title: string;
    /**
     * Footer subtitle
     */
    subtitle?: string | null;
    /**
     * Footer copyright
     */
    copyright?: string | null;
    /**
     * Footer logo
     */
    logo: string | Media;
    /**
     * Footer navigation columns
     */
    sections?:
      | {
          /**
           * Title for this footer column
           */
          title: string;
          /**
           * Links in this column
           */
          links?:
            | {
                /**
                 * Navigation link
                 */
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null);
                  url?: string | null;
                  label: string;
                  /**
                   * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
                   */
                  prefixIcon?: string | null;
                  /**
                   * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
                   */
                  suffixIcon?: string | null;
                  /**
                   * Choose how the link should be rendered.
                   */
                  appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
                };
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
    socialLinks?: {
      links?:
        | {
            /**
             * Link
             */
            link?: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              /**
               * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
               */
              prefixIcon?: string | null;
              /**
               * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
               */
              suffixIcon?: string | null;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
            };
            id?: string | null;
          }[]
        | null;
    };
    rightLinks?: {
      links?:
        | {
            /**
             * Link
             */
            link: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              label: string;
              /**
               * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
               */
              prefixIcon?: string | null;
              /**
               * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
               */
              suffixIcon?: string | null;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
            };
            id?: string | null;
          }[]
        | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Footer8Fields".
 */
export interface Footer8Fields {
  /**
   * Footer fields
   */
  footer: {
    /**
     * Footer title
     */
    title: string;
    /**
     * Footer subtitle
     */
    subtitle?: string | null;
    /**
     * Footer logo
     */
    logo: string | Media;
    /**
     * Footer navigation columns
     */
    sections?:
      | {
          /**
           * Title for this footer column
           */
          title: string;
          /**
           * Links in this column
           */
          links?:
            | {
                /**
                 * Navigation link
                 */
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null);
                  url?: string | null;
                  label: string;
                  /**
                   * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
                   */
                  prefixIcon?: string | null;
                  /**
                   * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
                   */
                  suffixIcon?: string | null;
                  /**
                   * Choose how the link should be rendered.
                   */
                  appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
                };
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
    socialLinks?: {
      links?:
        | {
            /**
             * Link
             */
            link?: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              /**
               * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
               */
              prefixIcon?: string | null;
              /**
               * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
               */
              suffixIcon?: string | null;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
            };
            id?: string | null;
          }[]
        | null;
    };
    bottomText?: {
      /**
       * Footer description
       */
      description?: string | null;
      /**
       * Footer copyright
       */
      copyright?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Footer9Fields".
 */
export interface Footer9Fields {
  /**
   * Footer fields
   */
  footer: {
    /**
     * Footer title
     */
    title: string;
    /**
     * Footer subtitle
     */
    subtitle?: string | null;
    /**
     * Footer copyright
     */
    copyright?: string | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
             */
            prefixIcon?: string | null;
            /**
             * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
             */
            suffixIcon?: string | null;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
          };
          id?: string | null;
        }[]
      | null;
    /**
     * Footer navigation columns
     */
    sections?:
      | {
          /**
           * Title for this footer column
           */
          title: string;
          /**
           * Links in this column
           */
          links?:
            | {
                /**
                 * Navigation link
                 */
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null);
                  url?: string | null;
                  label: string;
                  /**
                   * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
                   */
                  prefixIcon?: string | null;
                  /**
                   * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
                   */
                  suffixIcon?: string | null;
                  /**
                   * Choose how the link should be rendered.
                   */
                  appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
                };
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
    socialLinks: {
      /**
       * Footer title
       */
      title: string;
      links?:
        | {
            /**
             * Link
             */
            link: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              label: string;
              /**
               * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
               */
              prefixIcon?: string | null;
              /**
               * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
               */
              suffixIcon?: string | null;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
            };
            id?: string | null;
          }[]
        | null;
    };
    leftLinks?: {
      links?:
        | {
            /**
             * Link
             */
            link: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?:
                | ({
                    relationTo: 'pages';
                    value: string | Page;
                  } | null)
                | ({
                    relationTo: 'posts';
                    value: string | Post;
                  } | null);
              url?: string | null;
              label: string;
              /**
               * Optional: Lucide icon name for prefix (e.g., "ArrowLeft")
               */
              prefixIcon?: string | null;
              /**
               * Optional: Lucide icon name for suffix (e.g., "ArrowRight")
               */
              suffixIcon?: string | null;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: ('default' | 'outline' | 'ghost' | 'link') | null;
            };
            id?: string | null;
          }[]
        | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Footer10Fields".
 */
export interface Footer10Fields {
  /**
   * Footer fields
   */
  footer: {
    /**
     * Footer logo
     */
    logo: string | Media;
    bottomText?: {
      /**
       * Footer description
       */
      description?: string | null;
      /**
       * Footer copyright
       */
      copyright?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: string;
  tenant?: (string | null) | Tenant;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: string;
  tenant?: (string | null) | Tenant;
  form: string | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: string;
  tenant?: (string | null) | Tenant;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: string | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (string | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        id?: string | null;
        title?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: string;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'tenants';
        value: string | Tenant;
      } | null)
    | ({
        relationTo: 'header';
        value: string | Header;
      } | null)
    | ({
        relationTo: 'footer';
        value: string | Footer;
      } | null)
    | ({
        relationTo: 'redirects';
        value: string | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: string | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: string | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: string | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: string | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  tenant?: T;
  title?: T;
  hero?: T | HeroFieldSelect<T>;
  layout?:
    | T
    | {
        cta?: T | CTABlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
        gallery?: T | GalleryBlockSelect<T>;
        feature?: T | FeatureBlockSelect<T>;
        testimonial?: T | TestimonialBlockSelect<T>;
        contact?: T | ContactBlockSelect<T>;
        team?: T | TeamBlockSelect<T>;
        faq?: T | FAQBlockSelect<T>;
        logos?: T | LogosBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroField_select".
 */
export interface HeroFieldSelect<T extends boolean = true> {
  style?: T;
  'hero-1'?: T | Hero1FieldsSelect<T>;
  'hero-5'?: T | Hero5FieldsSelect<T>;
  'hero-7'?: T | Hero7FieldsSelect<T>;
  'hero-8'?: T | Hero8FieldsSelect<T>;
  'hero-12'?: T | Hero12FieldsSelect<T>;
  'hero-24'?: T | Hero24FieldsSelect<T>;
  'hero-25'?: T | Hero25FieldsSelect<T>;
  'hero-32'?: T | Hero32FieldsSelect<T>;
  'hero-34'?: T | Hero34FieldsSelect<T>;
  'hero-6'?: T | Hero6FieldsSelect<T>;
  'hero-3'?: T | Hero3FieldsSelect<T>;
  'hero-45'?: T | Hero45FieldsSelect<T>;
  'hero-115'?: T | Hero115FieldsSelect<T>;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero1Fields_select".
 */
export interface Hero1FieldsSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        subtitle?: T;
        image?: T;
        badge?: T;
        links?:
          | T
          | {
              'link-1'?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              'link-2'?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero5Fields_select".
 */
export interface Hero5FieldsSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        subtitle?: T;
        image?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero7Fields_select".
 */
export interface Hero7FieldsSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        subtitle?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              prefixIcon?: T;
              suffixIcon?: T;
              appearance?: T;
            };
        rating?:
          | T
          | {
              rate?: T;
              count?: T;
              avatars?:
                | T
                | {
                    avatar?: T;
                    id?: T;
                  };
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero8Fields_select".
 */
export interface Hero8FieldsSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        subtitle?: T;
        image?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero12Fields_select".
 */
export interface Hero12FieldsSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        subtitle?: T;
        logo?: T;
        badge?: T;
        links?:
          | T
          | {
              'link-1'?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              'link-2'?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        partners?:
          | T
          | {
              logo?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero24Fields_select".
 */
export interface Hero24FieldsSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        subtitle?: T;
        logo?: T;
        badge?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        features?:
          | T
          | {
              icon?: T;
              title?: T;
              description?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero25Fields_select".
 */
export interface Hero25FieldsSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        subtitle?: T;
        logo?: T;
        badge?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        features?:
          | T
          | {
              icon?: T;
              title?: T;
              description?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero32Fields_select".
 */
export interface Hero32FieldsSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              prefixIcon?: T;
              suffixIcon?: T;
              appearance?: T;
            };
        integrations?:
          | T
          | {
              image?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero34Fields_select".
 */
export interface Hero34FieldsSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        subtitle?: T;
        image?: T;
        badge?: T;
        links?:
          | T
          | {
              'link-1'?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              'link-2'?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero6Fields_select".
 */
export interface Hero6FieldsSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        subtitle?: T;
        image?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        partners?:
          | T
          | {
              logo?: T;
              id?: T;
            };
        secondaryImage?:
          | T
          | {
              image?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero3Fields_select".
 */
export interface Hero3FieldsSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        subtitle?: T;
        avatars?:
          | T
          | {
              image?: T;
              id?: T;
            };
        links?:
          | T
          | {
              'link-1'?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              'link-2'?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        review?:
          | T
          | {
              rate?: T;
              count?: T;
            };
        media?:
          | T
          | {
              image?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero45Fields_select".
 */
export interface Hero45FieldsSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        image?: T;
        badge?: T;
        features?:
          | T
          | {
              icon?: T;
              title?: T;
              description?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Hero115Fields_select".
 */
export interface Hero115FieldsSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        subtitle?: T;
        trustText?: T;
        image?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTABlock_select".
 */
export interface CTABlockSelect<T extends boolean = true> {
  style?: T;
  'cta-1'?: T | CTA1FieldsSelect<T>;
  'cta-3'?: T | CTA3FieldsSelect<T>;
  'cta-4'?: T | CTA4FieldsSelect<T>;
  'cta-5'?: T | CTA5FieldsSelect<T>;
  'cta-7'?: T | CTA7FieldsSelect<T>;
  'cta-10'?: T | CTA10FieldsSelect<T>;
  'cta-11'?: T | CTA11FieldsSelect<T>;
  'cta-15'?: T | CTA15FieldsSelect<T>;
  'cta-16'?: T | CTA16FieldsSelect<T>;
  'cta-17'?: T | CTA17FieldsSelect<T>;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTA1Fields_select".
 */
export interface CTA1FieldsSelect<T extends boolean = true> {
  cta?:
    | T
    | {
        title?: T;
        subtitle?: T;
        image?: T;
        icon?: T;
        links?:
          | T
          | {
              'link-1'?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTA3Fields_select".
 */
export interface CTA3FieldsSelect<T extends boolean = true> {
  cta?:
    | T
    | {
        title?: T;
        subtitle?: T;
        buttonLinks?:
          | T
          | {
              'link-1'?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        listLinks?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              description?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTA4Fields_select".
 */
export interface CTA4FieldsSelect<T extends boolean = true> {
  cta?:
    | T
    | {
        title?: T;
        subtitle?: T;
        links?:
          | T
          | {
              'link-1'?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        lists?:
          | T
          | {
              icon?: T;
              text?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTA5Fields_select".
 */
export interface CTA5FieldsSelect<T extends boolean = true> {
  cta?:
    | T
    | {
        title?: T;
        subtitle?: T;
        image?: T;
        links?:
          | T
          | {
              'link-1'?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTA7Fields_select".
 */
export interface CTA7FieldsSelect<T extends boolean = true> {
  cta?:
    | T
    | {
        title?: T;
        subtitle?: T;
        links?:
          | T
          | {
              'link-1'?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        lists?:
          | T
          | {
              icon?: T;
              text?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTA10Fields_select".
 */
export interface CTA10FieldsSelect<T extends boolean = true> {
  cta?:
    | T
    | {
        title?: T;
        subtitle?: T;
        links?:
          | T
          | {
              'link-1'?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTA11Fields_select".
 */
export interface CTA11FieldsSelect<T extends boolean = true> {
  cta?:
    | T
    | {
        title?: T;
        subtitle?: T;
        links?:
          | T
          | {
              'link-1'?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTA15Fields_select".
 */
export interface CTA15FieldsSelect<T extends boolean = true> {
  cta?:
    | T
    | {
        title?: T;
        subtitle?: T;
        heading?: T;
        image?: T;
        links?:
          | T
          | {
              'link-1'?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTA16Fields_select".
 */
export interface CTA16FieldsSelect<T extends boolean = true> {
  cta?:
    | T
    | {
        title?: T;
        subtitle?: T;
        image?: T;
        icon?: T;
        links?:
          | T
          | {
              'link-1'?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTA17Fields_select".
 */
export interface CTA17FieldsSelect<T extends boolean = true> {
  cta?:
    | T
    | {
        title?: T;
        subtitle?: T;
        links?:
          | T
          | {
              'link-1'?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              prefixIcon?: T;
              suffixIcon?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "GalleryBlock_select".
 */
export interface GalleryBlockSelect<T extends boolean = true> {
  style?: T;
  'gallery-1'?: T | Gallery1FieldsSelect<T>;
  'gallery-3'?: T | Gallery3FieldsSelect<T>;
  'gallery-4'?: T | Gallery4FieldsSelect<T>;
  'gallery-5'?: T | Gallery5FieldsSelect<T>;
  'gallery-6'?: T | Gallery6FieldsSelect<T>;
  'gallery-9'?: T | Gallery9FieldsSelect<T>;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Gallery1Fields_select".
 */
export interface Gallery1FieldsSelect<T extends boolean = true> {
  gallery?:
    | T
    | {
        title?: T;
        description?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              prefixIcon?: T;
              suffixIcon?: T;
              appearance?: T;
            };
        image?: T;
        items?:
          | T
          | {
              title?: T;
              href?: T;
              image?: T;
              logo?: T;
              company?: T;
              badges?:
                | T
                | {
                    text?: T;
                    id?: T;
                  };
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Gallery3Fields_select".
 */
export interface Gallery3FieldsSelect<T extends boolean = true> {
  gallery?:
    | T
    | {
        title?: T;
        items?:
          | T
          | {
              id?: T;
              title?: T;
              description?: T;
              label?: T;
              href?: T;
              image?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Gallery4Fields_select".
 */
export interface Gallery4FieldsSelect<T extends boolean = true> {
  gallery?:
    | T
    | {
        title?: T;
        items?:
          | T
          | {
              title?: T;
              description?: T;
              image?: T;
              href?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Gallery5Fields_select".
 */
export interface Gallery5FieldsSelect<T extends boolean = true> {
  gallery?:
    | T
    | {
        title?: T;
        description?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        items?:
          | T
          | {
              title?: T;
              description?: T;
              image?: T;
              href?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Gallery6Fields_select".
 */
export interface Gallery6FieldsSelect<T extends boolean = true> {
  gallery?:
    | T
    | {
        title?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              prefixIcon?: T;
              suffixIcon?: T;
              appearance?: T;
            };
        cards?:
          | T
          | {
              title?: T;
              excerpt?: T;
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              image?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Gallery9Fields_select".
 */
export interface Gallery9FieldsSelect<T extends boolean = true> {
  gallery?:
    | T
    | {
        title?: T;
        description?: T;
        sections?:
          | T
          | {
              image?: T;
              title?: T;
              text?: T;
              icon?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeatureBlock_select".
 */
export interface FeatureBlockSelect<T extends boolean = true> {
  style?: T;
  'feature-1'?: T | Feature1FieldsSelect<T>;
  'feature-2'?: T | Feature2FieldsSelect<T>;
  'feature-3'?: T | Feature3FieldsSelect<T>;
  'feature-5'?: T | Feature5FieldsSelect<T>;
  'feature-6'?: T | Feature6FieldsSelect<T>;
  'feature-7'?: T | Feature7FieldsSelect<T>;
  'feature-10'?: T | Feature10FieldsSelect<T>;
  'feature-11'?: T | Feature11FieldsSelect<T>;
  'feature-13'?: T | Feature13FieldsSelect<T>;
  'feature-14'?: T | Feature14FieldsSelect<T>;
  'feature-15'?: T | Feature15FieldsSelect<T>;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Feature1Fields_select".
 */
export interface Feature1FieldsSelect<T extends boolean = true> {
  feature?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        icon?: T;
        links?:
          | T
          | {
              'link-1'?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              'link-2'?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Feature2Fields_select".
 */
export interface Feature2FieldsSelect<T extends boolean = true> {
  feature?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        icon?: T;
        links?:
          | T
          | {
              'link-1'?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              'link-2'?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Feature3Fields_select".
 */
export interface Feature3FieldsSelect<T extends boolean = true> {
  feature?:
    | T
    | {
        title?: T;
        features?:
          | T
          | {
              icon?: T;
              title?: T;
              description?: T;
              image?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Feature5Fields_select".
 */
export interface Feature5FieldsSelect<T extends boolean = true> {
  feature?:
    | T
    | {
        features?:
          | T
          | {
              icon?: T;
              title?: T;
              description?: T;
              image?: T;
              id?: T;
            };
        testimonial?:
          | T
          | {
              image?: T;
              quote?: T;
              name?: T;
              role?: T;
              company?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Feature6Fields_select".
 */
export interface Feature6FieldsSelect<T extends boolean = true> {
  feature?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        icon?: T;
        features?:
          | T
          | {
              icon?: T;
              text?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Feature7Fields_select".
 */
export interface Feature7FieldsSelect<T extends boolean = true> {
  feature?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        icon?: T;
        features?:
          | T
          | {
              icon?: T;
              text?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Feature10Fields_select".
 */
export interface Feature10FieldsSelect<T extends boolean = true> {
  feature?:
    | T
    | {
        title?: T;
        description?: T;
        features?:
          | T
          | {
              icon?: T;
              title?: T;
              description?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Feature11Fields_select".
 */
export interface Feature11FieldsSelect<T extends boolean = true> {
  feature?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        links?:
          | T
          | {
              'link-1'?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        features?:
          | T
          | {
              icon?: T;
              text?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Feature13Fields_select".
 */
export interface Feature13FieldsSelect<T extends boolean = true> {
  feature?:
    | T
    | {
        title?: T;
        features?:
          | T
          | {
              image?: T;
              subtitle?: T;
              title?: T;
              description?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Feature14Fields_select".
 */
export interface Feature14FieldsSelect<T extends boolean = true> {
  feature?:
    | T
    | {
        title?: T;
        features?:
          | T
          | {
              image?: T;
              title?: T;
              description?: T;
              list?:
                | T
                | {
                    icon?: T;
                    text?: T;
                    id?: T;
                  };
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Feature15Fields_select".
 */
export interface Feature15FieldsSelect<T extends boolean = true> {
  feature?:
    | T
    | {
        title?: T;
        description?: T;
        subtitle?: T;
        features?:
          | T
          | {
              icon?: T;
              title?: T;
              description?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialBlock_select".
 */
export interface TestimonialBlockSelect<T extends boolean = true> {
  style?: T;
  'testimonial-4'?: T | Testimonial4FieldsSelect<T>;
  'testimonial-6'?: T | Testimonial6FieldsSelect<T>;
  'testimonial-7'?: T | Testimonial7FieldsSelect<T>;
  'testimonial-12'?: T | Testimonial12FieldsSelect<T>;
  'testimonial-14'?: T | Testimonial14FieldsSelect<T>;
  'testimonial-15'?: T | Testimonial15FieldsSelect<T>;
  'testimonial-16'?: T | Testimonial16FieldsSelect<T>;
  'testimonial-17'?: T | Testimonial17FieldsSelect<T>;
  'testimonial-18'?: T | Testimonial18FieldsSelect<T>;
  'testimonial-19'?: T | Testimonial19FieldsSelect<T>;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Testimonial4Fields_select".
 */
export interface Testimonial4FieldsSelect<T extends boolean = true> {
  featuredImage?: T;
  testimonials?:
    | T
    | {
        quote?: T;
        authorName?: T;
        authorRole?: T;
        authorImage?: T;
        id?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Testimonial6Fields_select".
 */
export interface Testimonial6FieldsSelect<T extends boolean = true> {
  title?: T;
  testimonials?:
    | T
    | {
        quote?: T;
        authorName?: T;
        authorRole?: T;
        authorImage?: T;
        id?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Testimonial7Fields_select".
 */
export interface Testimonial7FieldsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  cta?:
    | T
    | {
        type?: T;
        newTab?: T;
        reference?: T;
        url?: T;
        label?: T;
        prefixIcon?: T;
        suffixIcon?: T;
        appearance?: T;
      };
  testimonials?:
    | T
    | {
        quote?: T;
        authorName?: T;
        authorRole?: T;
        authorImage?: T;
        id?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Testimonial12Fields_select".
 */
export interface Testimonial12FieldsSelect<T extends boolean = true> {
  testimonials?:
    | T
    | {
        quote?: T;
        authorName?: T;
        authorRole?: T;
        authorImage?: T;
        companyName?: T;
        companyLogo?: T;
        monthlyActiveUsers?: T;
        monthlyActiveUsersLabel?: T;
        monthlyActiveUsersPeriod?: T;
        revenueIncrease?: T;
        revenueIncreaseLabel?: T;
        revenueIncreasePeriod?: T;
        id?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Testimonial14Fields_select".
 */
export interface Testimonial14FieldsSelect<T extends boolean = true> {
  testimonials?:
    | T
    | {
        quote?: T;
        authorName?: T;
        authorRole?: T;
        authorImage?: T;
        rating?: T;
        id?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Testimonial15Fields_select".
 */
export interface Testimonial15FieldsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  cta?:
    | T
    | {
        type?: T;
        newTab?: T;
        reference?: T;
        url?: T;
        label?: T;
        prefixIcon?: T;
        suffixIcon?: T;
        appearance?: T;
      };
  companySection?:
    | T
    | {
        text?: T;
        logos?:
          | T
          | {
              image?: T;
              id?: T;
            };
      };
  testimonials?:
    | T
    | {
        quote?: T;
        authorName?: T;
        authorImage?: T;
        id?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Testimonial16Fields_select".
 */
export interface Testimonial16FieldsSelect<T extends boolean = true> {
  heading?: T;
  subheading?: T;
  testimonials?:
    | T
    | {
        authorName?: T;
        authorImage?: T;
        tag?: T;
        content?: T;
        id?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Testimonial17Fields_select".
 */
export interface Testimonial17FieldsSelect<T extends boolean = true> {
  heading?: T;
  testimonials?:
    | T
    | {
        logo?: T;
        logoAlt?: T;
        quote?: T;
        authorName?: T;
        authorRole?: T;
        authorImage?: T;
        id?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Testimonial18Fields_select".
 */
export interface Testimonial18FieldsSelect<T extends boolean = true> {
  heading?: T;
  subheading?: T;
  statsText?: T;
  testimonial?:
    | T
    | {
        quote?: T;
        description?: T;
        authorName?: T;
        authorRole?: T;
        authorImage?: T;
        rating?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Testimonial19Fields_select".
 */
export interface Testimonial19FieldsSelect<T extends boolean = true> {
  heading?: T;
  subheading?: T;
  statsText?: T;
  viewAll?:
    | T
    | {
        type?: T;
        newTab?: T;
        reference?: T;
        url?: T;
        label?: T;
        prefixIcon?: T;
        suffixIcon?: T;
        appearance?: T;
      };
  testimonials?:
    | T
    | {
        quote?: T;
        authorName?: T;
        authorRole?: T;
        authorImage?: T;
        rating?: T;
        id?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContactBlock_select".
 */
export interface ContactBlockSelect<T extends boolean = true> {
  style?: T;
  'contact-1'?: T | Contact1FieldsSelect<T>;
  'contact-2'?: T | Contact2FieldsSelect<T>;
  'contact-3'?: T | Contact3FieldsSelect<T>;
  'contact-4'?: T | Contact4FieldsSelect<T>;
  'contact-5'?: T | Contact5FieldsSelect<T>;
  'contact-6'?: T | Contact6FieldsSelect<T>;
  'contact-7'?: T | Contact7FieldsSelect<T>;
  'contact-8'?: T | Contact8FieldsSelect<T>;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Contact1Fields_select".
 */
export interface Contact1FieldsSelect<T extends boolean = true> {
  contact?:
    | T
    | {
        title?: T;
        description?: T;
        list?:
          | T
          | {
              icon?: T;
              text?: T;
              id?: T;
            };
        avatars?:
          | T
          | {
              image?: T;
              id?: T;
            };
        logos?:
          | T
          | {
              image?: T;
              id?: T;
            };
        form?:
          | T
          | {
              submitButton?:
                | T
                | {
                    label?: T;
                  };
              fields?:
                | T
                | {
                    formField?:
                      | T
                      | {
                          label?: T;
                          placeholder?: T;
                          required?: T;
                          type?: T;
                          options?:
                            | T
                            | {
                                label?: T;
                                value?: T;
                                id?: T;
                              };
                        };
                    id?: T;
                  };
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Contact2Fields_select".
 */
export interface Contact2FieldsSelect<T extends boolean = true> {
  contact?:
    | T
    | {
        title?: T;
        description?: T;
        list?:
          | T
          | {
              text?: T;
              id?: T;
            };
        form?:
          | T
          | {
              submitButton?:
                | T
                | {
                    label?: T;
                  };
              fields?:
                | T
                | {
                    formField?:
                      | T
                      | {
                          label?: T;
                          placeholder?: T;
                          required?: T;
                          type?: T;
                          options?:
                            | T
                            | {
                                label?: T;
                                value?: T;
                                id?: T;
                              };
                        };
                    id?: T;
                  };
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Contact3Fields_select".
 */
export interface Contact3FieldsSelect<T extends boolean = true> {
  contact?:
    | T
    | {
        title?: T;
        subtitle?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        supportList?:
          | T
          | {
              supports?:
                | T
                | {
                    icon?: T;
                    subtitle?: T;
                    title?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
            };
        officeList?:
          | T
          | {
              title?: T;
              offices?:
                | T
                | {
                    subtitle?: T;
                    title?: T;
                    id?: T;
                  };
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Contact4Fields_select".
 */
export interface Contact4FieldsSelect<T extends boolean = true> {
  contact?:
    | T
    | {
        title?: T;
        subtitle?: T;
        supportList?:
          | T
          | {
              supports?:
                | T
                | {
                    title?: T;
                    subtitle?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
            };
        locationList?:
          | T
          | {
              locations?:
                | T
                | {
                    image?: T;
                    subtitle?: T;
                    title?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Contact5Fields_select".
 */
export interface Contact5FieldsSelect<T extends boolean = true> {
  contact?:
    | T
    | {
        title?: T;
        subtitle?: T;
        description?: T;
        form?:
          | T
          | {
              submitButton?:
                | T
                | {
                    label?: T;
                  };
              fields?:
                | T
                | {
                    formField?:
                      | T
                      | {
                          label?: T;
                          placeholder?: T;
                          required?: T;
                          type?: T;
                          options?:
                            | T
                            | {
                                label?: T;
                                value?: T;
                                id?: T;
                              };
                        };
                    id?: T;
                  };
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Contact6Fields_select".
 */
export interface Contact6FieldsSelect<T extends boolean = true> {
  contact?:
    | T
    | {
        title?: T;
        subtitle?: T;
        description?: T;
        supportList?:
          | T
          | {
              supports?:
                | T
                | {
                    icon?: T;
                    title?: T;
                    subtitle?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
            };
        form?:
          | T
          | {
              submitButton?:
                | T
                | {
                    label?: T;
                  };
              fields?:
                | T
                | {
                    formField?:
                      | T
                      | {
                          label?: T;
                          placeholder?: T;
                          required?: T;
                          type?: T;
                          options?:
                            | T
                            | {
                                label?: T;
                                value?: T;
                                id?: T;
                              };
                        };
                    id?: T;
                  };
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Contact7Fields_select".
 */
export interface Contact7FieldsSelect<T extends boolean = true> {
  contact?:
    | T
    | {
        title?: T;
        subtitle?: T;
        description?: T;
        supportList?:
          | T
          | {
              supports?:
                | T
                | {
                    icon?: T;
                    title?: T;
                    subtitle?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Contact8Fields_select".
 */
export interface Contact8FieldsSelect<T extends boolean = true> {
  contact?:
    | T
    | {
        title?: T;
        subtitle?: T;
        image?: T;
        supportList?:
          | T
          | {
              title?: T;
              supports?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
            };
        officeList?:
          | T
          | {
              title?: T;
              offices?:
                | T
                | {
                    title?: T;
                    subtitle?: T;
                    id?: T;
                  };
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TeamBlock_select".
 */
export interface TeamBlockSelect<T extends boolean = true> {
  style?: T;
  'team-1'?: T | Team1FieldsSelect<T>;
  'team-2'?: T | Team2FieldsSelect<T>;
  'team-3'?: T | Team3FieldsSelect<T>;
  'team-5'?: T | Team5FieldsSelect<T>;
  'team-6'?: T | Team6FieldsSelect<T>;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Team1Fields_select".
 */
export interface Team1FieldsSelect<T extends boolean = true> {
  team?:
    | T
    | {
        title?: T;
        subtitle?: T;
        description?: T;
        people?:
          | T
          | {
              name?: T;
              role?: T;
              description?: T;
              avatar?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Team2Fields_select".
 */
export interface Team2FieldsSelect<T extends boolean = true> {
  team?:
    | T
    | {
        title?: T;
        subtitle?: T;
        description?: T;
        people?:
          | T
          | {
              name?: T;
              role?: T;
              description?: T;
              avatar?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Team3Fields_select".
 */
export interface Team3FieldsSelect<T extends boolean = true> {
  team?:
    | T
    | {
        title?: T;
        subtitle?: T;
        description?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        people?:
          | T
          | {
              name?: T;
              role?: T;
              description?: T;
              avatar?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Team5Fields_select".
 */
export interface Team5FieldsSelect<T extends boolean = true> {
  team?:
    | T
    | {
        title?: T;
        subtitle?: T;
        description?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        people?:
          | T
          | {
              name?: T;
              role?: T;
              description?: T;
              avatar?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Team6Fields_select".
 */
export interface Team6FieldsSelect<T extends boolean = true> {
  team?:
    | T
    | {
        title?: T;
        subtitle?: T;
        description?: T;
        people?:
          | T
          | {
              name?: T;
              role?: T;
              description?: T;
              avatar?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQBlock_select".
 */
export interface FAQBlockSelect<T extends boolean = true> {
  style?: T;
  'faq-1'?: T | FAQ1FieldsSelect<T>;
  'faq-2'?: T | FAQ2FieldsSelect<T>;
  'faq-3'?: T | FAQ3FieldsSelect<T>;
  'faq-4'?: T | FAQ4FieldsSelect<T>;
  'faq-5'?: T | FAQ5FieldsSelect<T>;
  'faq-6'?: T | FAQ6FieldsSelect<T>;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQ1Fields_select".
 */
export interface FAQ1FieldsSelect<T extends boolean = true> {
  faq?:
    | T
    | {
        title?: T;
        faqs?:
          | T
          | {
              question?: T;
              answer?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQ2Fields_select".
 */
export interface FAQ2FieldsSelect<T extends boolean = true> {
  faq?:
    | T
    | {
        title?: T;
        faqs?:
          | T
          | {
              question?: T;
              answer?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQ3Fields_select".
 */
export interface FAQ3FieldsSelect<T extends boolean = true> {
  faq?:
    | T
    | {
        title?: T;
        subtitle?: T;
        faqs?:
          | T
          | {
              question?: T;
              answer?: T;
              id?: T;
            };
        support?:
          | T
          | {
              title?: T;
              subtitle?: T;
              supportLink?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQ4Fields_select".
 */
export interface FAQ4FieldsSelect<T extends boolean = true> {
  faq?:
    | T
    | {
        title?: T;
        subtitle?: T;
        description?: T;
        faqs?:
          | T
          | {
              question?: T;
              answer?: T;
              id?: T;
            };
        support?:
          | T
          | {
              title?: T;
              subtitle?: T;
              supportLink?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQ5Fields_select".
 */
export interface FAQ5FieldsSelect<T extends boolean = true> {
  faq?:
    | T
    | {
        title?: T;
        subtitle?: T;
        description?: T;
        faqs?:
          | T
          | {
              question?: T;
              answer?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQ6Fields_select".
 */
export interface FAQ6FieldsSelect<T extends boolean = true> {
  faq?:
    | T
    | {
        title?: T;
        subtitle?: T;
        description?: T;
        faqs?:
          | T
          | {
              question?: T;
              answer?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LogosBlock_select".
 */
export interface LogosBlockSelect<T extends boolean = true> {
  style?: T;
  'logos-1'?: T | Logos1FieldsSelect<T>;
  'logos-2'?: T | Logos2FieldsSelect<T>;
  'logos-3'?: T | Logos3FieldsSelect<T>;
  'logos-8'?: T | Logos8FieldsSelect<T>;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Logos1Fields_select".
 */
export interface Logos1FieldsSelect<T extends boolean = true> {
  logos?:
    | T
    | {
        title?: T;
        logos?:
          | T
          | {
              logo?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Logos2Fields_select".
 */
export interface Logos2FieldsSelect<T extends boolean = true> {
  logos?:
    | T
    | {
        title?: T;
        description?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              prefixIcon?: T;
              suffixIcon?: T;
              appearance?: T;
            };
        logos?:
          | T
          | {
              logo?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Logos3Fields_select".
 */
export interface Logos3FieldsSelect<T extends boolean = true> {
  logos?:
    | T
    | {
        title?: T;
        logos?:
          | T
          | {
              logo?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Logos8Fields_select".
 */
export interface Logos8FieldsSelect<T extends boolean = true> {
  logos?:
    | T
    | {
        title?: T;
        description?: T;
        logos?:
          | T
          | {
              logo?: T;
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  tenant?: T;
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  tenant?: T;
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  tenant?: T;
  title?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  roles?: T;
  username?: T;
  tenants?:
    | T
    | {
        tenant?: T;
        roles?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants_select".
 */
export interface TenantsSelect<T extends boolean = true> {
  name?: T;
  domain?: T;
  slug?: T;
  allowPublicRead?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  tenant?: T;
  style?: T;
  'header-1'?: T | Header1FieldsSelect<T>;
  'header-3'?: T | Header3FieldsSelect<T>;
  'header-5'?: T | Header5FieldsSelect<T>;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Header1Fields_select".
 */
export interface Header1FieldsSelect<T extends boolean = true> {
  header?:
    | T
    | {
        logo?: T;
        title?: T;
        menu?:
          | T
          | {
              parentLink?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              subMenu?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    description?: T;
                    id?: T;
                  };
              id?: T;
            };
        rightSideLinks?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Header3Fields_select".
 */
export interface Header3FieldsSelect<T extends boolean = true> {
  header?:
    | T
    | {
        logo?: T;
        rightLinks?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
      };
  menu?:
    | T
    | {
        parentMenu?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              prefixIcon?: T;
              suffixIcon?: T;
              appearance?: T;
            };
        submenu?:
          | T
          | {
              style?: T;
              style1Config?:
                | T
                | {
                    leftSection?:
                      | T
                      | {
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                image?: T;
                                title?: T;
                                description?: T;
                                appearance?: T;
                              };
                        };
                    rightSection?:
                      | T
                      | {
                          title?: T;
                          links?:
                            | T
                            | {
                                link?:
                                  | T
                                  | {
                                      type?: T;
                                      newTab?: T;
                                      reference?: T;
                                      url?: T;
                                      prefixIcon?: T;
                                      suffixIcon?: T;
                                      title?: T;
                                      description?: T;
                                      appearance?: T;
                                    };
                                id?: T;
                              };
                        };
                  };
              style2Config?:
                | T
                | {
                    leftSection?:
                      | T
                      | {
                          title?: T;
                          links?:
                            | T
                            | {
                                link?:
                                  | T
                                  | {
                                      type?: T;
                                      newTab?: T;
                                      reference?: T;
                                      url?: T;
                                      label?: T;
                                      prefixIcon?: T;
                                      suffixIcon?: T;
                                      appearance?: T;
                                    };
                                id?: T;
                              };
                        };
                    rightSection?:
                      | T
                      | {
                          link?:
                            | T
                            | {
                                type?: T;
                                newTab?: T;
                                reference?: T;
                                url?: T;
                                image?: T;
                                title?: T;
                                subtitle?: T;
                                description?: T;
                              };
                        };
                  };
              style3Config?:
                | T
                | {
                    leftSection?:
                      | T
                      | {
                          title?: T;
                          description?: T;
                          links?:
                            | T
                            | {
                                link?:
                                  | T
                                  | {
                                      type?: T;
                                      newTab?: T;
                                      reference?: T;
                                      url?: T;
                                      label?: T;
                                      appearance?: T;
                                    };
                                id?: T;
                              };
                        };
                    rightSection?:
                      | T
                      | {
                          links?:
                            | T
                            | {
                                link?:
                                  | T
                                  | {
                                      type?: T;
                                      newTab?: T;
                                      reference?: T;
                                      url?: T;
                                      image?: T;
                                      title?: T;
                                      description?: T;
                                      appearance?: T;
                                    };
                                id?: T;
                              };
                        };
                  };
              style4Config?:
                | T
                | {
                    leftSection?:
                      | T
                      | {
                          title?: T;
                          links?:
                            | T
                            | {
                                link?:
                                  | T
                                  | {
                                      type?: T;
                                      newTab?: T;
                                      reference?: T;
                                      url?: T;
                                      title?: T;
                                      description?: T;
                                    };
                                id?: T;
                              };
                        };
                    rightSection?:
                      | T
                      | {
                          title?: T;
                          links?:
                            | T
                            | {
                                link?:
                                  | T
                                  | {
                                      type?: T;
                                      newTab?: T;
                                      reference?: T;
                                      url?: T;
                                      image?: T;
                                      title?: T;
                                      description?: T;
                                    };
                                id?: T;
                              };
                        };
                  };
            };
        id?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Header5Fields_select".
 */
export interface Header5FieldsSelect<T extends boolean = true> {
  header?:
    | T
    | {
        logo?: T;
        title?: T;
        menu?:
          | T
          | {
              parentLink?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              subMenus?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    description?: T;
                    id?: T;
                  };
              id?: T;
            };
        rightSideLinks?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  tenant?: T;
  style?: T;
  'footer-1'?: T | Footer1FieldsSelect<T>;
  'footer-2'?: T | Footer2FieldsSelect<T>;
  'footer-3'?: T | Footer3FieldsSelect<T>;
  'footer-4'?: T | Footer4FieldsSelect<T>;
  'footer-5'?: T | Footer5FieldsSelect<T>;
  'footer-6'?: T | Footer6FieldsSelect<T>;
  'footer-7'?: T | Footer7FieldsSelect<T>;
  'footer-8'?: T | Footer8FieldsSelect<T>;
  'footer-9'?: T | Footer9FieldsSelect<T>;
  'footer-10'?: T | Footer10FieldsSelect<T>;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Footer1Fields_select".
 */
export interface Footer1FieldsSelect<T extends boolean = true> {
  footer?:
    | T
    | {
        copyright?: T;
        logo?: T;
        sections?:
          | T
          | {
              title?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
        rightLinks?:
          | T
          | {
              title?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Footer2Fields_select".
 */
export interface Footer2FieldsSelect<T extends boolean = true> {
  footer?:
    | T
    | {
        title?: T;
        subtitle?: T;
        copyright?: T;
        logo?: T;
        sections?:
          | T
          | {
              title?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
        rightLinks?:
          | T
          | {
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Footer3Fields_select".
 */
export interface Footer3FieldsSelect<T extends boolean = true> {
  footer?:
    | T
    | {
        copyright?: T;
        logo?: T;
        sections?:
          | T
          | {
              title?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
        rightLinks?:
          | T
          | {
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
            };
        socialLinks?:
          | T
          | {
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Footer4Fields_select".
 */
export interface Footer4FieldsSelect<T extends boolean = true> {
  footer?:
    | T
    | {
        copyright?: T;
        logo?: T;
        sections?:
          | T
          | {
              title?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
        leftLinks?:
          | T
          | {
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
            };
        socialLinks?:
          | T
          | {
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
            };
        newsletter?:
          | T
          | {
              title?: T;
              subtitle?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Footer5Fields_select".
 */
export interface Footer5FieldsSelect<T extends boolean = true> {
  footer?:
    | T
    | {
        copyright?: T;
        sections?:
          | T
          | {
              title?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
        socialLinks?:
          | T
          | {
              title?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
            };
        appLinks?:
          | T
          | {
              title?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Footer6Fields_select".
 */
export interface Footer6FieldsSelect<T extends boolean = true> {
  footer?:
    | T
    | {
        title?: T;
        subtitle?: T;
        copyright?: T;
        logo?: T;
        sections?:
          | T
          | {
              title?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
        rightLinks?:
          | T
          | {
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Footer7Fields_select".
 */
export interface Footer7FieldsSelect<T extends boolean = true> {
  footer?:
    | T
    | {
        title?: T;
        subtitle?: T;
        copyright?: T;
        logo?: T;
        sections?:
          | T
          | {
              title?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
        socialLinks?:
          | T
          | {
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
            };
        rightLinks?:
          | T
          | {
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Footer8Fields_select".
 */
export interface Footer8FieldsSelect<T extends boolean = true> {
  footer?:
    | T
    | {
        title?: T;
        subtitle?: T;
        logo?: T;
        sections?:
          | T
          | {
              title?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
        socialLinks?:
          | T
          | {
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
            };
        bottomText?:
          | T
          | {
              description?: T;
              copyright?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Footer9Fields_select".
 */
export interface Footer9FieldsSelect<T extends boolean = true> {
  footer?:
    | T
    | {
        title?: T;
        subtitle?: T;
        copyright?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    prefixIcon?: T;
                    suffixIcon?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        sections?:
          | T
          | {
              title?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
        socialLinks?:
          | T
          | {
              title?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
            };
        leftLinks?:
          | T
          | {
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          prefixIcon?: T;
                          suffixIcon?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Footer10Fields_select".
 */
export interface Footer10FieldsSelect<T extends boolean = true> {
  footer?:
    | T
    | {
        logo?: T;
        bottomText?:
          | T
          | {
              description?: T;
              copyright?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  tenant?: T;
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  tenant?: T;
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  tenant?: T;
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  tenant?: T;
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        id?: T;
        title?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "api-key".
 */
export interface ApiKey {
  id: string;
  keys?:
    | {
        /**
         * ⚠️ OpenAI API密钥将以加密形式存储
         */
        openai?: string | null;
        /**
         * ⚠️ DeepSeek API密钥将以加密形式存储
         */
        deepseek?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "api-key_select".
 */
export interface ApiKeySelect<T extends boolean = true> {
  keys?:
    | T
    | {
        openai?: T;
        deepseek?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null);
    global?: string | null;
    user?: (string | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}